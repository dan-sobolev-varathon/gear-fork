searchState.loadedDescShard("gclient", 3, "Get a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the number of elements in <code>self_encoded</code>.\nUpper bound, in bytes, of the maximum encoded size of this …\nWrite a single byte to the output.\nRead the exact number of bytes required to fill the given …\nRead a single byte from the input.\nShould return the remaining length of the input data. If …\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nReturn an encoding of <code>Self</code> prepended by given slice.\nConvert self to a slice and then invoke the given closure …\nWrite to the output.\nPiecewise Linear function in [0, 1] -&gt; [0, 1].\nCompute <code>f(n/d)*d</code> with <code>n &lt;= d</code>. This is useful to avoid loss …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe maximum value that can be returned.\nArray of points. Must be in order from the lowest …\nAbstraction over a substrate block.\nSomething to identify a block.\nDefinition of something that the external world might want …\nA message from the runtime to the consensus engine. This …\nA message from the runtime to the consensus engine. This …\nType corresponding to DigestItem::Consensus.\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nA ‘referencing view’ for digest item. Does not own its …\nAn era to describe the longevity of a transaction.\nIdentify by block header hash.\nAbstraction over a block header for a substrate chain.\nThe transaction is valid forever. The genesis hash must be …\nPeriod and phase are encoded:\nIdentify by block number.\nType of a digest item that contains raw data; this also …\nSome other thing. Unsupported and experimental.\nAny ‘non-system’ digest item, opaque to the native …\nSome other (non-prescribed) type.\nEra phase\nA pre-runtime digest.\nA pre-runtime digest.\nType corresponding to DigestItem::PreRuntime.\nAn indication for the light clients that the runtime …\nRuntime code or heap pages updated.\nPut a Seal on it. This is only used by native code, and is …\nPut a Seal on it. This is only used by native code, and is …\nType corresponding to DigestItem::Seal.\nAbstraction over a substrate block and justification.\nA payload that has been signed for an unchecked extrinsics.\nA extrinsic right from the external world. This is …\nCast this digest item into <code>Consensus</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>Seal</code>\nGet the block number of the start of the era whose …\nFull block.\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nGet the block number of the first block at which the era …\nDeconstruct the payload into it’s components.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate new <code>SignedPayload</code> from raw components.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nThe function that should be called.\nCreate a block ID from a hash.\nConvenience helper for computing the hash of the header …\nThe block header.\nCreate an “immortal” transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> if this is an immortal transaction.\nCheck if this block ID refers to the pre-genesis state.\nBlock justification.\nA list of logs in the digest.\nCreate a new era based on a period (which should be a …\nCreate new <code>SignedPayload</code>.\nA new header with the given number and default hash for …\nNew instance of a signed extrinsic aka “transaction”.\nNew instance of an unsigned extrinsic aka “inherent”.\nCreate a block ID from a number.\nThe block number.\nThe parent hash.\nCreate a block ID for a pre-genesis state.\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nThe signature, address, number of extrinsics have come …\nWho this purports to be from and the number of extrinsics …\nThe state trie merkle root\nTry to match this digest item to the given opaque item …\nTry to match this digest item to the given opaque item …\nGet an encoded version of this payload.\nHelper gcd function used in Rational128 implementation.\nReturns <code>a * b / c</code> (wrapping to 128 bits) or <code>None</code> in the …\nsplit a u128 into two u64 limbs\nConvert a u128 to a u32 based biguint.\nRuntime types that existed prior to BlockBuilder API …\n<code>ApplyExtrinsicResult</code> type definition before BlockBuilder …\nAn arithmetic error.\nA bad origin.\nFailed to lookup some data.\nAt least one consumer is remaining so the account cannot …\n<code>DispatchError</code> type definition before BlockBuilder API …\n<code>DispatchOutcome</code> type definition before BlockBuilder API …\nContains the error value\nContains the error value\nA custom error in a module.\n<code>ModuleError</code> type definition before BlockBuilder API …\nThere are no providers so the account cannot be created.\nContains the success value\nContains the success value\nSome error occurred.\nAn error to do with tokens.\nThere are too many consumers so the account cannot be …\nConvert the legacy <code>ApplyExtrinsicResult</code> type to the latest …\nModule specific error value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nModule index, matching the metadata module index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional error message.\nExecution context extra capabilities.\nA externalities extension for accessing the Offchain DB.\nThe requested action couldn’t been completed within a …\nDeadline was reached while we waited for this request to …\nDuration type\nAn extended externalities for offchain workers.\nThe request has finished with given status code.\nExternal http calls.\nAn error enum returned by some http methods.\nOpaque type for offchain http requests.\nStatus of the HTTP request\nThe ID of the request is invalid in this context.\nThe passed ID is invalid in this context.\nThere was an IO Error while processing the request.\nAn error has occurred during the request, for example a …\nKeystore access.\nAn identifier for a type of cryptographic key.\nLocal storage is revertible and fork-aware. It means that …\nAn <code>*Externalities</code> implementation with limited capabilities.\nAccess to opaque network state.\nManage the authorized nodes\nAccess to offchain worker DB (read only).\nAccess to offchain worker DB (writes).\nThe offchain database extension that will be registered at …\nChange to be applied to the offchain worker db in regards …\nOffchain DB persistent (non-fork-aware) storage.\nThe offchain worker extension that will be registered at …\nSimple blob to hold a <code>Multiaddr</code> without committing to its …\nA blob to hold information about the local node’s …\nPersistent storage is non-revertible and not fork-aware. …\nRandomness source.\nRemove the data associated with the key\nPersistent storage prefix used by the Offchain Worker API …\nOverwrite the value of an associated key\nA type of supported crypto.\nAccess time related functionality\nOpaque timestamp type\nAbstraction over transaction pool.\nAn externalities extension to submit transactions to the …\nIncrease the timestamp by given <code>Duration</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReplace the value in storage if given old_value matches …\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns a saturated difference (Duration) between two …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nList of addresses the node knows it can be reached as.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nCreate new duration representing given number of …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates new <code>Timestamp</code> given unix timestamp in milliseconds.\nRetrieve a value from storage under given key and prefix.\nA high-level helpers for making HTTP requests from …\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns if the local node is a potential validator.\nRemoves a value in the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns number of milliseconds this Duration represents.\nReturns information about the local node’s network state.\nCreate new externalities limited to given <code>capabilities</code>.\nCreate new <code>OpaqueMultiaddr</code>\nCreate a new instance of <code>Self</code>.\nCreate a new instance of <code>OffchainDbExt</code>.\nCreate a new instance of <code>TransactionPoolExt</code>.\nReturns the complement of this set of flags.\nPeerId of the local node in SCALE encoded.\nReturns a random seed.\nClear a storage entry under given key and prefix.\nRemoves the specified flags in-place.\nPersist a value in storage under given key and prefix.\nInserts or removes the specified flags depending on the …\nSet the authorized nodes from runtime.\nPause the execution until <code>deadline</code> is reached.\nA set of storage helpers for offchain workers.\nOff-chain Storage Lock\nDecrease the timestamp by given <code>Duration</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nSubmit transaction.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns current UNIX timestamp (in millis)\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturn number of milliseconds since UNIX epoch.\nDeadline has been reached.\nDELETE request\nContains the error value\nA request error\nGET request\nA collection of Headers in the response.\nA custom iterator traversing all the headers.\nA result of waiting for a pending request.\nRequest had timed out.\nRequest method (HTTP verb)\nContains the success value\nCustom verb\nPATCH request\nA struct representing an uncompleted http request.\nPOST request\nPUT request\nAn HTTP request builder.\nA HTTP response.\nA buffered byte iterator over response body.\nUnknown error has been encountered.\nAdd a header.\nSet the body of the request.\nRetrieve the body of this response.\nBody of the request\nResponse status code\nReturns current element (if any).\nSet the deadline of the request.\nSet the deadline for reading the body.\nDeadline to finish sending the request\nReturn an error that caused the iterator to return <code>None</code>.\nRetrieve a single header from the list of headers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStart a simple GET request\nRetrieve the headers for this response.\nRequest ID\nRequest id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this headers into an iterator.\nChange the method of the request\nRequest method\nCreate a new Request builder with the given URL.\nMove the iterator to the next position.\nCreate new POST request with given body.\nRaw headers\nSend the request and return a handle.\nAttempts to wait for the request to finish, but will …\nAttempt to wait for all provided requests, but up to given …\nChange the URL of the request.\nRequest URL\nWait for the request to complete.\nWait for all provided requests.\nThe underlying db failed to update due to a concurrent …\nPossible errors when mutating a storage value.\nReason for not being able to provide the stored value\nA storage value with a static key.\nAn abstraction over local storage value.\nValue found but undecodable\nThe function given to us to create the value to be stored …\nRemove the associated value from the storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve &amp; decode the value from storage.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new reference to a value in the fork-aware local …\nRetrieve &amp; decode the current value and set it to a new …\nCreate a new reference to a value in the persistent local …\nSet the value of the storage to encoding of given …\nLockable based on block number and timestamp.\nA deadline based on block number and time.\nAn instant type specifying i.e. a point in time.\nLockable item for use with a persisted storage lock.\nStorage based lock.\nRAII style guard for a lock.\nLockable based on the current timestamp with a …\nThe block number until which the lock is still valid <em>at </em>…\nCalculate the deadline based on a current state such as …\nProvide the current state of block number and time.\nExtend the lock by guard deadline if it already exists.\nConsume the guard but <strong>do not</strong> unlock the underlying lock.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVerify the deadline has not expired compared to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepeated lock attempts until the lock is successfully …\nCreate a new storage lock with a <code>default()</code> instance of …\nSnooze at least until <code>deadline</code> is reached.\nThe timestamp until which the lock is still valid <em>at least</em>.\nA single attempt to lock using the storage entry.\nExplicitly create a time and block number based storage …\nExplicitly create a time and block number based storage …\nExplicitly create a time based storage lock with a …\nCreate a new storage lock with an explicit instance of a …\nRuntime logger implementation - <code>log</code> crate backend.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the logger.\nCalls <code>U::from(self)</code>.\nAn array type with compile-time known length.\nA type representing a sequence of bits.\n<code>bool</code> type\n<code>char</code> type\nA type using the [<code>Compact</code>] encoding\nA composite type (e.g. a struct or a tuple)\nA field of a struct-like data type.\n<code>i128</code>\n<code>i16</code>\n256 bits signed int (no rust equivalent)\n<code>i32</code>\n<code>i64</code>\n<code>i8</code>\nThe type identifying for which type info is provided.\nConvert the type definition into the portable form using a …\nIf a segment within a module path is not a proper Rust …\nA metatype abstraction.\nIf the module path does not at least have one segment.\nThe portable version of <code>Self</code>.\nRepresents the path of a type definition.\nAn error that may be encountered upon constructing …\nA read-only registry containing types in their portable …\nConstruct a <code>PortableRegistry</code>.\nRepresent a type in it’s portable form.\nA Rust primitive type.\nThe registry for space-efficient storage of type …\nA sequence type with runtime known length.\nConvenience trait for implementors, combining <code>TypeInfo</code> and …\n<code>str</code> type\nA tuple type.\nA <code>Type</code> definition with optional metadata.\nThe possible types a SCALE encodable Rust value could have.\nAn array type.\nType describing a <code>bitvec::vec::BitVec</code>.\nA type wrapped in [<code>Compact</code>].\nA composite type, consisting of either named (struct) or …\nA primitive Rust type.\nA type to refer to a sequence of elements of the same type.\nA type to refer to tuple types.\nA Enum type (consisting of variants).\nImplementors return their meta type information.\nA generic type parameter.\n<code>u128</code>\n<code>u16</code>\n256 bits unsigned int (no rust equivalent)\n<code>u32</code>\n<code>u64</code>\n<code>u8</code>\nA struct enum variant with either named (struct) or …\nA variant type (e.g. an enum)\nReturns the type of the bit ordering of the …\nThe type implementing <code>bitvec::order::BitOrder</code>.\nReturns underlying type used to store the …\nThe type implementing <code>bitvec::store::BitStore</code>.\nBuilders for defining metadata for variant types (enums), …\nReturns a new <code>FieldBuilder</code> for constructing a field.\nCreate a <code>TypeBuilder</code> the public API for constructing a <code>Type</code>…\nCreate a <code>TypeBuilder</code> the public API for constructing a <code>Type</code>…\nReturns the documentation of the field.\nReturns the documentation of the variant.\nReturns the documentation of the type\nDocumentation\nDocumentation\nDocumentation\nReturns the fields of the composite type.\nReturns the fields of the struct variant.\nReturns the types of the tuple fields.\nThe fields of the composite type.\nThe fields of the variant.\nThe types of the tuple fields.\nFinalize and return a valid <code>PortableRegistry</code> instance.\nProvides form definitions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a Path from the given segments\nCreate a Path from the given segments.\nReturns a reference to the type registered at the given ID …\nReturns the index of the <code>PortableType</code>.\nThe ID of the portable type.\nGet the ident segment of the Path\nReturns the index of the variant.\nIndex of the variant, used in <code>parity-scale-codec</code>.\nInterning data structure and associated symbol definitions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> to the portable form by using the registry …\nReturns <code>true</code> if the path is empty\nReturns the length of the array type.\nThe length of the array type.\nConverts an iterator into a Vec of the equivalent portable …\nReturns the runtime bridge to the types compile-time type …\nReturns the name of the field. None for unnamed fields.\nReturns the name of the variant.\nGet the name of the parameter.\nThe name of the field. None for unnamed fields.\nThe name of the variant.\nThe name of the generic type parameter e.g. “T”.\nConstruct a vector of <code>TypeParameter</code>s from pairs of the …\nGet the namespace segments of the Path\nCreates a new meta type from the given compile-time known …\nCreates a new struct definition with named fields.\nCreates a new field.\nCreate a new Path\nCreate a new <code>TypeDefVariant</code> with the given variants\nCreates a new variant.\nCreate a <code>Type</code>.\nCreate a new <code>TypeParameter</code>.\nCreates a new array type.\nCreates a new tuple type definition from the given types.\nCreates a new sequence type.\nCreates a new type wrapped in [<code>Compact</code>].\nCreates a new <code>TypeDefBitSequence</code> for the supplied bit …\nCreates a new empty registry.\nCreate a new <code>PortableRegistryBuilder</code>.\nConstruct a custom <code>PortableType</code>.\nCreate a new <code>TypeParameter</code> in <code>PortableForm</code>.\nCreates a new custom type definition from the given types.\nCreates a new <code>TypeDefBitSequence</code> for the supplied bit …\nCreate a new Path\nReturns the type id that would be assigned to a newly …\nCreates a new sequence type.\nReturns the path of the type\nThe unique path to the type. Can be empty for built-in …\nExports from <code>std</code>, <code>core</code> and <code>alloc</code> crates.\nRegisters the given type into the registry and returns its …\nRegister a type, returning the assigned ID.\nCalls <code>register_type</code> for each <code>MetaType</code> in the given <code>iter</code>.\nReturns the type definition for the given identifier, <code>None</code> …\nRetains only the portable types needed to express the …\nReturns the segments of the Path\nThe segments of the namespace.\nTakes a number of types and returns a vector that contains …\nReturns the type of the field.\nGet the type of the parameter.\nReturns the type of the <code>PortableType</code>.\nThe type of the field.\nThe concrete type for the type parameter.\nThe portable form of the type.\nReturns the definition of the type\nThe actual type definition\nReturns the type identifier provided by <code>core::any</code>.\nReturns the static type identifier for <code>Self</code>.\nReturns the meta type information.\nReturns a string which is the name of the type of the …\nThe name of the type of the field as it appears in the …\nReturns the element type of the array type.\nReturns the element type of the sequence type.\nReturns the [<code>Compact</code>] wrapped type, i.e. the <code>T</code> in …\nThe element type of the array type.\nThe element type of the sequence type.\nThe type wrapped in [<code>Compact</code>], i.e. the <code>T</code> in <code>Compact&lt;T&gt;</code>.\nReturns the generic type parameters of the type\nThe generic type parameters of the type in use. Empty for …\nConstruct a vector of <code>TypeParameter</code> instances with the …\nReturns an iterator over the types with their keys\nReturns all types with their associated identifiers.\nThe types contained by the <code>PortableRegistry</code>.\nCreates a new unit tuple to represent the unit type, <code>()</code>.\nReturns the variants of a variant type\nThe variants of a variant type\nThe index of the erroneous segment.\nConstruct a valid <code>Field</code>.\nProvides FieldsBuilder constructors\nBuild a set of either all named (e.g. for a struct) or all …\nA fields builder only allows named fields (e.g. a struct)\nA fields builder has no fields (e.g. a unit struct)\nBuilds a <code>Type</code>\nA fields builder only allows unnamed fields (e.g. a tuple)\nBuild a <code>Variant</code>.\nBuilds a definition of a variant type i.e an <code>enum</code>\nInitializes the type of the field as a compact type.\nConstruct a “composite” type i.e. a <code>struct</code>\nSet the variant’s discriminant.\nDoc capture is not enabled via the “docs” feature so …\nDoc capture is not enabled via the “docs” feature so …\nDoc capture is not enabled via the “docs” feature so …\nSet the type documentation, always captured even if the “…\nInitialize the documentation of a field, always captured …\nInitialize the variant’s documentation, always captured …\nAdd an unnamed field constructed using the builder.\nAdd a named field constructed using the builder.\nAdd an unnamed field constructed using the builder.\nAdd a named field constructed using the builder.\nType states for building a field.\nInitialize the variant’s fields.\nComplete building and return the set of fields\nComplete building and return a new <code>Field</code>.\nComplete building and create final <code>Variant</code> instance.\nConstruct a new <code>TypeDefVariant</code> from the initialized …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the variant’s codec index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize the field name.\nFields for a type construct with named fields\nCreate a new FieldBuilder.\nCreate a new <code>VariantBuilder</code>.\nCreate a new [<code>VariantsBuilder</code>].\nSet the Path for the type\nState types for type builders which require a Path.\nInitialize the type of the field.\nInitialize the type of the field.\nInitialize the type name of a field (optional).\nSet the type parameters if it’s a generic type\nThe type construct has no fields\nFields for a type construct with unnamed fields\nConstruct a “variant” type i.e an <code>enum</code>\nAdd a variant\nState types for the <code>VariantBuilder</code> which requires an index.\nAdd a unit variant (without fields).\nA name has been assigned to the field.\nA name has not been assigned to the field.\nA type has been assigned to the field.\nA type has not been assigned to the field.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nState where the builder has assigned a Path to the type\nState where the builder has not assigned a Path to the type\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nState where the builder has assigned an index to a variant.\nState where the builder has not assigned an index to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait to control the internal structures of type …\nTrait to support derivation of <code>JsonSchema</code> for schema …\nA meta meta-type.\nPortable form that has its lifetime untracked in …\nThe string type.\nThe type representing the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterning data structure generic over the element type.\nA symbol from an interner.\nA symbol that is not lifetime tracked.\nReturns the ordered sequence of interned elements.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the symbol of the given element or <code>None</code> if it hasn…\nReturns the index to the symbol in the interner table.\nThe index to the symbol in the interner table.\nInterns the given element or returns its associated symbol …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the lifetime tracking for this symbol.\nCreates a new empty interner.\nResolves the original element given its associated symbol …\nCreates a <code>String</code> using interpolation of runtime …\nTemporal quantification.\nCreates a <code>Vec</code> containing the arguments.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA measurement of the system clock, useful for talking to …\nAn error returned from the <code>duration_since</code> and <code>elapsed</code> …\nAn error which can be returned when converting a …\nAn anchor in time which can be used to create new …\nAn anchor in time which can be used to create new …\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the positive duration which represents how far …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nSCALE encode this type to bytes, possibly with the help of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreates a new <code>Duration</code> from the specified number of …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nTesting block\nA message from the runtime to the consensus engine. This …\nHeader Digest\nDigest item\nAn opaque extrinsic wrapper type.\nFixed-size uninterpreted hash type with 32 bytes (256 …\nBlock Header\nSome other thing. Unsupported and experimental.\nA pre-runtime digest.\nAn indication for the light clients that the runtime …\nPut a Seal on it. This is only used by native code, and is …\nA dummy signature type, to match <code>UintAuthorityId</code>.\nTest transaction, tuple of (sender, call, signed_extra) …\nA dummy type which can be used instead of regular …\nExecutes all necessary logic needed prior to dispatch and …\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nCall of the extrinsic.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nA chain-specific digest of data useful for light clients …\nSCALE encode this type to bytes, possibly with the help of …\nList of extrinsics\nThe merkle root of the extrinsics.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nBlock header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no bits are set.\nReturns the size of this hash in bytes.\nA list of logs in the digest.\nCreate a new <code>TextXt</code>.\nThe block number.\nThe parent hash.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nReturns a new fixed hash where all bits are set to the …\nSet the list of keys returned by the runtime call for all …\nSignature of the extrinsic.\nThe state trie merkle root\nReturns the inner bytes array.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nConvert this authority ID into a public key.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nReturns a new zero-initialized fixed hash.\nThe account ID that this can be transformed into.\nType of the signer.\nThe type which encodes the sender identity.\nThis type can be converted into and possibly from an …\nA lookup implementation returning the <code>AccountId</code> from a …\nAny additional data that will go into the signed payload. …\nMeans of signature verification of an application key.\nInput that adds infinite number of zero after wrapped …\nAn “executable” piece of information, used by the …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nAn error type that indicates that the origin is invalid.\nBlake2-256 Hash implementation.\nA “checkable” piece of information, used by the …\nSomething which fulfills the abstract idea of a Substrate …\nSomething that can convert a <code>BlockId</code> to a number or a hash.\nType of <code>BlockNumber</code> to provide.\nGet current block number\nNumbers which have upper and lower bounds\nThe function call.\nThe type which encodes the call to be dispatched.\nType by which we can dispatch. Restricts the …\nThe call to validate\nSomething that can be checked for equality and printed out …\nExtract the digest type for a block. A “checkable” …\nReturned if <code>check</code> succeeds.\nReturned if <code>check</code> succeeds.\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nA <code>TryMorph</code> implementation to reduce a scalar by a …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nTrait for things that can be clear (have no bits set). For …\n…\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nA structure that performs standard conversion using the …\nAdapter which turns a Get implementation into a Convert …\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nA lazy call (module function and argument values) that can …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nThe error type that gets returned when a collection can’…\nThe error type that will be returned by the functions.\nSomething that acts like an <code>Extrinsic</code>.\nType for extrinsics.\nImplementor is an <code>Extrinsic</code> and provides metadata about …\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nA marker trait for something that knows the type of the …\nA marker trait for something that knows the type of the …\nAbstraction around hashing\nHeader hash type\nBlock hash type.\nSuper trait with all the attributes for a hashing output.\nHashing algorithm\nExtract the hashing type for a block.\nSomething which fulfills the abstract idea of a Substrate …\nHeader type.\nUnique identifier of this signed extension.\nSome type that is able to be collapsed into an account ID. …\nA structure that performs identity conversion.\nA lookup implementation returning the input value.\nAn opaque set of information attached to the transaction. …\nA trait implementing integer square root.\nDetermine if a <code>MemberId</code> is a valid member.\nKeccak-256 Hash implementation.\nTypes bound to this opaque keys that provide the key type …\nA lazy value.\nMeans of changing one type into another in a manner …\nAn error that indicates that a lookup failed.\nFallible conversion trait returning an Option. Generic …\nReversing fallible conversion trait returning an Option. …\nA type that implements Display when in std environment.\nDefinition for a bi-directional, fallible conversion …\nA type that implements FromStr when in std environment.\nA type that implements Hash when in std environment.\nA type that implements Serialize when in std environment …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nExtensible conversion trait. Generic over only source …\nImplementation of <code>Morph</code> which converts between types using …\nA <code>TryMorph</code> implementation to enforce an upper limit for a …\nThe <code>NodeBlock</code> type.\nHeader number.\nExtract the number type for a block.\nDefines a multiplicative identity element for <code>Self</code>.\nOpaque data type that may be destructured into a series of …\nThe type into which <code>A</code> is mutated.\nThe type into which <code>A</code> is mutated.\nThe output type of the product of <code>self</code> and <code>Other</code>.\nThe hash type produced.\nZero-sized type used to mark things that “act like” …\nShortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe type that encodes information that can be passed from …\nTrait for things which can be printed from the runtime.\nMutator which reduces a scalar by a particular amount.\nMorpher to disregard the source value and replace with …\nThe <code>RuntimeBlock</code> type.\nEvery function call from your runtime has an origin, which …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nMultiply and divide by a number that isn’t necessarily …\nThe signature type of the extrinsic.\nThe type of the address that signed the extrinsic.\nThe additional data that is specific to the signed …\nSomething that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…\nThe payload we carry for signed extrinsics.\nMeans by which a transaction may be extended. This type …\nInformation about a <code>SignedExtension</code> for the runtime …\nSigned extensions attached to this <code>Extrinsic</code>.\nType of the signer.\nA meta trait for all bit ops.\nType to lookup from.\nType to lookup from.\nMeans of changing one type into another in a manner …\nImplementation of <code>Morph</code> to retrieve just the first element …\nType to lookup into.\nType to lookup into.\nInput that adds infinite number of zero after wrapped …\nTry and collect into a collection <code>C</code>.\nFallible conversion trait which returns the argument in …\nReversing fallible conversion trait which returns the …\nA structure that performs standard conversion using the …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>TryMorph</code> which attmepts to convert …\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nThe format version of the <code>Extrinsic</code>.\nProvide validation for unsigned extrinsics.\nMeans of signature verification.\nDefines an additive identity element for <code>Self</code>.\nConstruct any additional data that should be in the signed …\nThe type of the <code>SignedExtension</code> additional signed data for …\nExecutes all necessary logic needed prior to dispatch and …\nCheck self, given an instance of Context.\nCheck self.\nPerform the equality check.\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return <code>Some</code> equivalent value of <code>Option&lt;T&gt;</code>.\nMultiplies two numbers, checking for underflow or …\nRaises a value to the power of exp, returning <code>None</code> if an …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nSubtracts two numbers, checking for underflow. If …\nReturn the value of Self that is clear.\nMake conversion.\nAttempt to convert reference of <code>A</code> into value of <code>B</code>, …\nMake conversion back.\nAttempt to convert reference of <code>B</code> into value of <code>A</code>, …\nReturns the current block number.\nSplit the block into header and list of extrinsics.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nActually dispatch this call and return the result of it.\n@return the integer division of <code>self</code> and <code>other</code>.\nCreates an encoded block from the given <code>header</code> and …\nSCALE encode this type to bytes, possibly with the help of …\nAdds two numbers, checking for overflow.\nAdds two numbers overwriting the left hand one, checking …\nDivides two numbers, checking for overflow.\nDivides two numbers overwriting the left hand one, …\nEnsure division for integer type <code>N</code>. Equal to <code>self / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nCreates <code>self</code> from a rational number. Equal to <code>n / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nMultiplies two numbers, checking for overflow.\nMultiplies two numbers overwriting the left hand one, …\nEnsure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…\nRaises a value to the power of exp, returning …\nSubtracts two numbers, checking for overflow.\nSubtracts two numbers overwriting the left hand one, …\nReturns a reference to the list of extrinsics.\nReturns a reference to the extrinsics root.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the current value.\nReturn the current value.\nGet a reference to the underlying value.\nGet the decoded key with key-type ID <code>i</code>.\nGet the raw bytes of key with key-type ID <code>i</code>.\nProduce the hash of some byte-slice.\nReturns the hash of the header.\nReturns the hash of the block.\nProduce the hash of some codec-encodable value.\nReturns a reference to the header.\nThe unique identifier of the <code>SignedExtension</code>.\nFind the integer square root.\nFind the integer square root, returning <code>None</code> if the number …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransform into an account.\nConvert into an account ID. This is infallible, and may …\nConvert this value amalgamated with the a secondary “sub…\nTrue iff no bits are set.\nIs the given <code>MemberId</code> a valid member?\nReturns <code>true</code> if <code>self</code> is equal to the multiplicative …\nIs this <code>Extrinsic</code> signed? If no information are available …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nReturn the key-type IDs supported by this set.\nAttempt a lookup.\nAttempt a lookup.\nReturns the largest finite number this type can represent\nAttempt to make conversion.\nAttempt to make conversion back.\nReturns the metadata for this signed extension.\nReturns the smallest finite number this type can represent\nMake conversion.\n@return the product of <code>self</code> and <code>other</code>.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate new instance of the extrinsic.\nCreate a new instance from the given byte array.\nCreate a new instance from the given byte array.\nReturns a reference to the header number.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nVerify a proof of ownership for the keys.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nDo any post-flight stuff for an extrinsic.\nDo any pre-flight stuff for a signed transaction.\nValidate the call right before dispatch.\nDo any pre-flight stuff for a unsigned transaction.\nPrint the object.\n@return the modulo remainder of <code>self</code> and <code>other</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nIncrement self by some <code>amount</code>, saturating.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nDecrement self by one, saturating at zero.\nIncrement self by one, saturating.\nDecrement self by one, saturating at zero.\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nIncrement self by one, saturating at the numeric bounds …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nDecrement self by some <code>amount</code>, saturating at zero.\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSets the extrinsic root.\nSets the header number.\nSets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…\nSets the parent hash.\nSets the state root.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nReturns a reference to the state root.\nConvert the given <code>block_id</code> to the corresponding block hash.\nConvert the given <code>block_id</code> to the corresponding block …\nThe Patricia tree root of the given mapping.\nConsume self and try to collect the results into <code>C</code>.\nAttempt to make conversion. If returning Result::Err, the …\nAttempt to make conversion back. If returning Result::Err, …\nTry to convert an account ID into this type. Might not …\nTry to convert an account ID into this type. Might not …\nConvert into an account ID, checking that all bytes of the …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nMake conversion.\nThe type of the <code>SignedExtension</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nValidate a signed transaction for the transaction queue.\nReturn the validity of the call\nValidate an unsigned transaction for the transaction queue.\nVerify a signature.\nVerify a signature. Return <code>true</code> if signature is valid for …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nCreate a new instance which only contains zeroes as input.\nThe transaction birth block is ancient.\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe call of the transaction is not expected.\nCould not lookup some information that is required to …\nAny other custom invalid validity that is not covered by …\nAny other custom unknown validity that is not covered by …\nContains the error value\nThe transaction would exhaust the resources of current …\nTransaction has been received externally.\nGeneral error to do with the transaction not yet being …\nTransaction is already included in block.\nThe transaction is invalid.\nAn invalid transaction validity.\nTransaction is coming from a local source.\nAn extrinsic with a mandatory dispatch tried to be …\nNo validator found for the given unsigned transaction.\nContains the success value\nGeneral error to do with the inability to pay some fees …\nGeneral error to do with the transaction being outdated …\nMinimum number of blocks a transaction will remain valid …\nPriority for a transaction. Additive. Higher is better.\nThe source of the transaction.\nTag for a transaction. No two transactions with the same …\nInformation on a transaction’s validity and, if valid, …\nErrors that can occur while checking the validity of a …\nTransaction validity can’t be determined.\nAn unknown transaction validity.\nInformation concerning a valid transaction.\n<code>ValidTransaction</code> builder.\nAdd a <code>TransactionTag</code> to the set of provided tags.\nAdd a <code>TransactionTag</code> to the set of required tags.\nFinalize the builder and produce <code>TransactionValidity</code>.\nCombine two instances into one, as a best effort. This …\nAugment the builder with existing <code>ValidTransaction</code>.\nReturns if the reason for the invalidity was block …\nReturns <code>true</code> if the reason for the error was block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the longevity of a transaction.\nTransaction longevity\nSet the priority of a transaction.\nPriority of the transaction.\nSet the propagate flag.\nA flag indicating if the transaction should be propagated …\nProvided tags\nTransaction dependencies\nReturns if the reason for the invalidity was a mandatory …\nReturns <code>true</code> if the reason for the error was it being a …\nInitiate <code>ValidTransaction</code> builder object with a particular …\nShow the call info.\nConvert to type.\nCommon error type for runtime modules.\nShow the call info.\nreturns call name.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nreturns call name.\nThe <code>Event</code> enum of this pallet\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA balance was set by root.\nSome amount was burned from an account.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Event</code> enum of this pallet\nSome balance was frozen.\nTotal issuance was increased by <code>amount</code>, creating a credit …\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nSome amount was withdrawn from the account (e.g. for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls of pallet <code>Babe</code>.\nCalls of pallet <code>BagsList</code>.\nCalls of pallet <code>Balances</code>.\nCalls of pallet <code>Bounties</code>.\nShow the call info.\nCalls of pallet <code>ChildBounties</code>.\nCalls of pallet <code>ConvictionVoting</code>.\nCalls of pallet <code>ElectionProviderMultiPhase</code>.\nCalls of pallet <code>FellowshipCollective</code>.\nCalls of pallet <code>FellowshipReferenda</code>.\nCalls of pallet <code>Gear</code>.\nCalls of pallet <code>GearDebug</code>.\nCalls of pallet <code>GearEthBridge</code>.\nCalls of pallet <code>GearVoucher</code>.\nCalls of pallet <code>Grandpa</code>.\nCalls of pallet <code>Identity</code>.\nCalls of pallet <code>ImOnline</code>.\nCalls of pallet <code>Multisig</code>.\nCalls of pallet <code>NominationPools</code>.\nCalls of pallet <code>Preimage</code>.\nCalls of pallet <code>Proxy</code>.\nCalls of pallet <code>Referenda</code>.\nCalls of pallet <code>Scheduler</code>.\nCalls of pallet <code>Session</code>.\nCalls of pallet <code>Staking</code>.\nCalls of pallet <code>StakingRewards</code>.\nCalls of pallet <code>Sudo</code>.\nCalls of pallet <code>System</code>.\nCalls of pallet <code>Timestamp</code>.\nCalls of pallet <code>Treasury</code>.\nCalls of pallet <code>Utility</code>.\nCalls of pallet <code>Vesting</code>.\nCalls of pallet <code>Whitelist</code>.\nreturns call name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn account has delegated their vote to another account. …\nThe <code>Event</code> enum of this pallet\nAn [account] has cancelled a previous delegation operation.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn election failed.\nThe election has been finalized, with the given …\nThe <code>Event</code> enum of this pallet\nThere was a phase transition in a given round.\nAn account has been rewarded for their signed submission …\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProgram is active.\nThe payment has already been attempted.\nStash is already bonded.\nAccount ID is already named.\nRewards for this era have already been claimed for this …\nThe account is already delegating.\nAccount is already a member.\nPreimage has already been noted on-chain.\nController is already paired.\nThe account currently has votes attached to it and the …\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nThe class ID supplied is invalid.\nThe referendum index provided is invalid in this context.\nInternal state has become somehow corrupted and the …\nThe referendum status is invalid for this operation.\nA nomination target was supplied that was blocked or …\nThe track identifier given was invalid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nSome bound is not met.\nThe call was already whitelisted; No-Op.\nThe origin filter prevent the call to be dispatched.\nThe call was not whitelisted.\nThe user has enough bond and thus cannot be chilled …\nAttempt to signal GRANDPA change with one already pending.\nThe class must be supplied since it is not easily …\nCode already exists.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nCommission is too low. Must be at least <code>MinCommission</code>.\nThe <code>Error</code> enum of this pallet.\nUnexpected error in state.\nBeneficiary account must pre-exist.\nDuplicate index.\nA given equivocation report is valid but already …\nDuplicated heartbeat.\nRegistered duplicate key.\nThe spend is not yet eligible for payout.\nEmpty index.\nTargets cannot be empty.\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nThe balance of the asset kind is not convertible to the …\nFailed to extract the runtime version from the new runtime.\nFailed to schedule a call\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nFee is changed.\nThere are already a full complement of referenda in …\nAttempting to target a stash that still has funds.\nGas limit too high.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nGear::run() already included in current block.\nError for the staking rewards pallet.\nThe <code>Error</code> enum of this pallet.\nReferendum’s decision deposit is already paid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nProgram is terminated.\nThe payment has neither failed nor succeeded yet.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nBalance too low to send value.\nNot enough balance to execute an action.\nCannot have a validator or nominator role, with value less …\nToo high a balance was provided that the account cannot …\nThe spend origin is valid but the amount it is allowed to …\nProposer’s balance is too low.\nThe weight of the decoded call was higher than the witness.\nAn equivocation proof provided as part of an equivocation …\nInvalid era to reward.\nThe index is invalid.\nNo proposal, bounty or spend at that index.\nInvalid judgement.\nNon existent public key.\nA key ownership proof provided as part of an equivocation …\nInvalid number of nominations.\nNo nominators exist on this page.\nInvalid ownership proof.\nFailed to create a new schedule because some parameter was …\nSlash record index out of bounds.\nThe name of specification does not match between the …\nThe target is invalid.\nThe information provided is incorrect.\nThe provided judgement was for a different identity.\nJudgement given.\nError that occurs when there is an issue paying for …\nAccount liquidity restrictions prevent withdrawal.\nA error in the list interface implementation.\nMaximum number of votes reached.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nCommon error type for runtime modules.\nAttempt to use a non-named function on a named task.\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nThe deposit cannot be refunded since none was made.\nNo identity found.\nNo keys are associated with this account.\nMessage gas tree is not found.\nCan not schedule more unlock chunks.\nThe actor has no permission to conduct the action.\nThe origin is not sufficiently privileged to do the …\nThe deposit refunder is not the depositor.\nThe actor has no permission to conduct the action right …\nNo track exists for the proposal origin.\nCan not rebond without unlocking chunks.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThere are no further records to be removed.\nDelegation to oneself makes no sense.\nThe payout was not yet attempted/claimed.\nThe user is not authorized to perform this action.\nNot a controller account.\nThe account is not currently delegating.\nAccount isn’t found.\nCannot find the scheduled call.\nAccount is not a member.\nAccount isn’t named.\nThe preimage cannot be removed since it has not yet been …\nPoll is not ongoing.\nReferendum is not ongoing.\nSub-account isn’t owned by sender.\nThe given poll index is unknown or has closed.\nThe preimage request cannot be removed since no …\nItems are not sorted and unique.\nNot a stash account.\nSender is not a sub-account.\nThe account given is not vesting.\nThe given account did not vote on the poll.\nThere was nothing to do in the advancement.\nThe given poll is still ongoing.\nAttempt to signal GRANDPA pause when the authority set isn…\nThere was some issue with the mechanism of payment.\nThe <code>Error</code> enum of this pallet.\nThe preimage does not exist.\nProgram already exists.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nProposal has not been approved.\nThe queue of the track is empty.\nThe <code>Error</code> enum of this pallet.\nThe member’s rank is too low to vote.\nThe <code>Error</code> enum of this pallet.\nA preimage may not be removed when there are outstanding …\nSender must be the Sudo account.\nReschedule failed because it does not change scheduled …\nAttempt to signal GRANDPA resume when the authority set isn…\nBlock count doesn’t cover MinimalResumePeriod.\nAn index was out of bounds of the vesting schedules.\nThe <code>Error</code> enum of this pallet.\nError for the session pallet.\nThe specification version is not allowed to decrease …\nThe spend has expired and cannot be claimed.\nThe <code>Error</code> enum of this pallet.\nSticky judgement.\nError for the Sudo pallet.\nError for the System pallet\nGiven target block number is in the past.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nToo many approvals in the queue.\nToo many calls batched.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>MaxHolds</code>.\nThere are too many nominators in the system. Governance …\nMaximum amount of registrars reached. Cannot add any more.\nNumber of named reserves exceed <code>MaxReserves</code>.\nToo many subs-accounts.\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nCannot signal forced change so soon after last.\nError for the treasury pallet.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nAny deposit cannot be refunded until after the decision is …\nThe <code>Error</code> enum of this pallet.\nError for the vesting pallet.\nVesting balance too high to send value.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA member <code>who</code> has been added.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAny data related to program codes changed.\nThe <code>Event</code> enum of this pallet\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nAny data related to programs changed.\nThe pseudo-inherent extrinsic that runs queue processing …\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nA snapshot of the debug data: programs and message queue (…\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nPallet Gear Eth Bridge’s event.\nA new message was queued for bridging.\nMerkle root of the queue changed: new messages queued …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPallet Gear Voucher event.\nVoucher has been declined (set to expired state).\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nNew authority set has been applied.\nCurrent authority set has been paused.\nCurrent authority set has been resumed.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nA judgement was given by a registrar.\nA judgement was asked from a registrar.\nA judgement request was retracted.\nA registrar was added.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nAt the end of the session, at least one validator was …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA member has became bonded in a pool.\nA pool has been created.\nA pool has been destroyed.\nEvents of this pallet.\nA member has been removed from a pool.\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nA payout has been made to a member.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nA pool’s maximum commission setting has been changed.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA preimage has ben cleared.\nThe <code>Event</code> enum of this pallet\nA preimage has been noted.\nA preimage has been requested.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn announcement was placed to make a call in the future.\nThe <code>Event</code> enum of this pallet\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\n<code>:code</code> was updated.\nError for the System pallet\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nFailed to extract the runtime version from the new runtime.\nThe name of specification does not match between the …\nAn account was reaped.\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nOn on-chain remark happened.\nThe specification version is not allowed to decrease …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_prefix</code>].\nSee [<code>Pallet::kill_storage</code>].\nSee [<code>Pallet::remark</code>].\nSee [<code>Pallet::remark_with_event</code>].\nSee [<code>Pallet::set_code</code>].\nSee [<code>Pallet::set_code_without_checks</code>].\nSee [<code>Pallet::set_heap_pages</code>].\nSee [<code>Pallet::set_storage</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nSubmitted configuration is invalid.\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::plan_config_change</code>].\nSee [<code>Pallet::report_equivocation</code>].\nSee [<code>Pallet::report_equivocation_unsigned</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA error in the list interface implementation.\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::put_in_front_of</code>].\nSee [<code>Pallet::put_in_front_of_other</code>].\nSee [<code>Pallet::rebag</code>].\nA balance was set by root.\nSome amount was burned from an account.\nContains a variant per dispatchable extrinsic that this …\nBeneficiary account must pre-exist.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nSome balance was frozen.\nBalance too low to send value.\nTotal issuance was increased by <code>amount</code>, creating a credit …\nAccount liquidity restrictions prevent withdrawal.\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>MaxHolds</code>.\nNumber of named reserves exceed <code>MaxReserves</code>.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nVesting balance too high to send value.\nSome amount was withdrawn from the account (e.g. for …\nSee [<code>Pallet::force_set_balance</code>].\nSee [<code>Pallet::force_transfer</code>].\nSee [<code>Pallet::force_unreserve</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::transfer_all</code>].\nSee [<code>Pallet::transfer_allow_death</code>].\nSee [<code>Pallet::transfer_keep_alive</code>].\nSee [<code>Pallet::upgrade_accounts</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nContains a variant per dispatchable extrinsic that this …\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty cannot be closed because it has active child …\nProposer’s balance is too low.\nInvalid bounty fee.\nNo proposal or bounty at that index.\nInvalid bounty value.\nA bounty payout is pending. To cancel the bounty, you must …\nThe bounties cannot be claimed/closed because it’s still …\nThe reason given is just too big.\nRequire bounty curator.\nToo many approvals are already queued.\nThe bounty status is unexpected.\nSee [<code>Pallet::accept_curator</code>].\nSee [<code>Pallet::approve_bounty</code>].\nSee [<code>Pallet::award_bounty</code>].\nSee [<code>Pallet::claim_bounty</code>].\nSee [<code>Pallet::close_bounty</code>].\nSee [<code>Pallet::extend_bounty_expiry</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::propose_bounty</code>].\nSee [<code>Pallet::propose_curator</code>].\nSee [<code>Pallet::unassign_curator</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nContains a variant per dispatchable extrinsic that this …\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty balance is not enough to add new child-bounty.\nThe parent bounty is not in active state.\nNumber of child bounties exceeds limit …\nSee [<code>Pallet::accept_curator</code>].\nSee [<code>Pallet::add_child_bounty</code>].\nSee [<code>Pallet::award_child_bounty</code>].\nSee [<code>Pallet::claim_child_bounty</code>].\nSee [<code>Pallet::close_child_bounty</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::propose_curator</code>].\nSee [<code>Pallet::unassign_curator</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe account is already delegating.\nThe account currently has votes attached to it and the …\nThe class ID supplied is invalid.\nContains a variant per dispatchable extrinsic that this …\nThe class must be supplied since it is not easily …\nAn account has delegated their vote to another account. …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nToo high a balance was provided that the account cannot …\nMaximum number of votes reached.\nThe actor has no permission to conduct the action.\nThe actor has no permission to conduct the action right …\nDelegation to oneself makes no sense.\nThe account is not currently delegating.\nPoll is not ongoing.\nThe given account did not vote on the poll.\nAn [account] has cancelled a previous delegation operation.\nSee [<code>Pallet::delegate</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_other_vote</code>].\nSee [<code>Pallet::remove_vote</code>].\nSee [<code>Pallet::undelegate</code>].\nSee [<code>Pallet::unlock</code>].\nSee [<code>Pallet::vote</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome bound not met\nContains a variant per dispatchable extrinsic that this …\nThe call is not allowed at this point.\nAn election failed.\nThe election has been finalized, with the given …\nError of the pallet that can be returned in response to …\nThe <code>Event</code> enum of this pallet\nThe fallback failed\n<code>Self::insert_submission</code> returned an invalid index.\nSnapshot metadata should exist but didn’t.\nOCW submitted solution for wrong round\nThere was a phase transition in a given round.\nSubmission was too early.\nSubmission was too weak, score-wise.\nWrong number of winners presented.\nAn account has been rewarded for their signed submission …\nThe origin failed to pay the deposit.\nWitness data to dispatchable is invalid.\nThe queue was full, and the solution was not better than …\nThe signed submission consumes too much weight\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nSubmitted solution has too many winners\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::governance_fallback</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::set_emergency_election_result</code>].\nSee [<code>Pallet::set_minimum_untrusted_score</code>].\nSee [<code>Pallet::submit</code>].\nSee [<code>Pallet::submit_unsigned</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProgram is active.\nContains a variant per dispatchable extrinsic that this …\nCode already exists.\nAny data related to program codes changed.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nGas limit too high.\nGear::run() already included in current block.\nProgram is terminated.\nNot enough balance to execute an action.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nMessage gas tree is not found.\nProgram already exists.\nAny data related to programs changed.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nThe pseudo-inherent extrinsic that runs queue processing …\nBlock count doesn’t cover MinimalResumePeriod.\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nSee [<code>Pallet::claim_value</code>].\nSee [<code>Pallet::claim_value_to_inheritor</code>].\nSee [<code>Pallet::create_program</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::run</code>].\nSee [<code>Pallet::send_message</code>].\nSee [<code>Pallet::send_reply</code>].\nSee [<code>Pallet::set_execute_inherent</code>].\nSee [<code>Pallet::upload_code</code>].\nSee [<code>Pallet::upload_program</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nInsufficient user balance.\nInsufficient bank account balance. <strong>Must be unreachable in </strong>…\nDeposit of funds that will not keep bank account alive. …\nInsufficient user’s bank account gas balance.\nInsufficient user’s bank account gas balance.\nOverflow during funds transfer. <strong>Must be unreachable in </strong>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA snapshot of the debug data: programs and message queue (…\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nSee [<code>Pallet::enable_debug_mode</code>].\nSee [<code>Pallet::exhaust_block_resources</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.")