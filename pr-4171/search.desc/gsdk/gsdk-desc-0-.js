searchState.loadedDescShard("gsdk", 0, "Gear api\nGear api wrapper.\nBlock number type\nThe transaction has been broadcast to other nodes.\nThe transaction was dropped.\nContains the error value\nSomething went wrong in the node.\nThe struct contains results of gas calculation required to …\nGear gas node.\nGear gas node id.\nGear pages.\nTransaction has been included in block with given hash.\nTransaction has been finalized by a finality-gadget, e.g …\nTransaction is invalid (bad nonce, signature etc).\nTransaction is no longer in a best block.\nContains the success value\nGear Program\nTransaction in block.\nTransaction in block with result wrapper.\nTransaction status.\nTransaction is part of the future queue.\n<code>Value</code> holds a representation of some value that has been …\nIf the value is a boolean value, return it.\nIf the value is a char, return it.\nIf the value is an i128, return it.\nIf the value is a string, return it.\nIf the value is a u128, return it.\nBacktrace support for <code>gsdk</code>\nGet Gear bank account data.\nGet Gear bank account data at specified block.\nCreate a new bit sequence value without additional context.\nReturn a timestamp of the block.\nCreate a new boolean value without additional context.\nContains number of gas burned during message processing.\ngear_calculateInitCreateGas\ngear_calculateHandleGas\ngear_calculateReplyForHandle\ngear_calculateReplyGas\ngear_calculateInitUploadGas\nCapture the dispatch info of any extrinsic and display the …\nParse transaction fee from InBlockEvents\nCreate a new char without additional context.\ncompare gas limit\nGet <code>InstrumentedCode</code> length by its <code>CodeId</code>.\nGet <code>InstrumentedCode</code> length by its <code>CodeId</code> at specified …\nGet <code>InstrumentedCode</code> by its `CodeId.\nGet <code>InstrumentedCode</code> by its `CodeId at specified block.\nGear config\nSome additional arbitrary context that can be associated …\nDecode <code>DispatchError</code> to <code>subxt::error::Error</code>.\nSCALE encode this type to bytes, possibly with the help of …\nEvents api\nSubscribe all events.\nParse events of an extrinsic\nCheck whether the message queue processing is stopped or …\npallet babe constant\nShortcut for fetching storage.\nShortcut for fetching storage at specified block.\nSubscribe finalized events\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new Value from a set of bytes; useful for …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\npallet gas constants\nGet Gear gas nodes by their ids.\nGet Gear gas nodes by their ids at specified block.\nGet gear block number.\nGet balance by account address.\nGet events.\nGet events at specified block.\nGet a message identified by <code>message_id</code> from the <code>account_id</code>…\nGet storage from optional block hash.\ngenerated code preludes.\nGet pages of active program.\nGet pages of active program at specified block.\nGet active program from program id.\nGet active program from program id at specified block.\nCreate a new signed integer without additional context.\nGet account info by address.\nGet account info by address at specified block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet all mailbox messages or for the provided <code>address</code>.\nMap the context to some different type.\nThe value may be returned if a program happens to be …\nRepresents minimum gas limit required for execution.\nConstruct a named composite type from any type which …\nCreate a new variant value with named fields and without …\nCreate new API client.\nCreate new API client with timeout.\nGet block number.\nGet original code by its <code>CodeId</code>.\nGet original code by its <code>CodeId</code> at specified block.\nCreate a new primitive value without additional context.\nGet program pages from program id.\ngear_meta_hash\ngear_readState\ngear_readStateUsingWasm\nRemove the context.\nGas amount that we reserve for some other on-chain …\nGSdk Results\nHow many times we’ll retry when rpc requests failed.\nGear RPC Client\nruntime_wasmBlobVersion\nGear api with signer\nNew signer from api\nGet pages of active program.\nGet pages of active program at specified block.\nGet the storage address from storage info.\nGet the storage root address from storage info.\nCreate a new string value without additional context.\nSubscribe all blocks\nSubscribe finalized blocks\nSubscription implementation.\nGet value of gas total issuance.\nGet value of gas total issuance at specified block.\nCreate a new unsigned integer without additional context.\nConstruct an unnamed composite type from any type which …\nCreate a new variant value with tuple-like fields and …\nGet all validators from pallet_session.\nThe shape and associated data for this Value\nCreate a new variant value without additional context.\nWas the message placed into waitlist at the end of …\nCreate a new value with some associated context.\nSetup retry times and return the API instance.\nCreate a new value with no associated context.\nHuman readable message; what went wrong.\nHuman readable message; why was it invalid.\nHuman readable message; why was it dropped.\nNumber of peers it’s been broadcast to.\nBacktrace support for transactions\nTransaction Status for Backtrace\nAppend status to transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet backtrace of transaction\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ngear config\nA chain-specific digest of data useful for light clients …\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe block number.\nThe parent hash.\nThe state trie merkle root\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> and for struct and enum.\nThis trait is implemented for any type <code>T</code> where <code>T</code> …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nAttempt to deserialise the value from input.\nGiven some input bytes, a <code>type_id</code>, and type registry, …\nAttempt to deserialize the value from input into a …\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nConvert self to a slice and then invoke the given closure …\nShow the call info.\nConvert to type.\nShow the call info.\nreturns call name.\nreturns call name.\nThe <code>Event</code> enum of this pallet\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nA balance was set by root.\nSome amount was burned from an account.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Event</code> enum of this pallet\nSome balance was frozen.\nTotal issuance was increased by <code>amount</code>, creating a credit …\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nSome amount was withdrawn from the account (e.g. for …\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Event</code> enum of this pallet\nCalls of pallet <code>Babe</code>.\nCalls of pallet <code>BagsList</code>.\nCalls of pallet <code>Balances</code>.\nCalls of pallet <code>Bounties</code>.\nShow the call info.\nCalls of pallet <code>ChildBounties</code>.\nCalls of pallet <code>ConvictionVoting</code>.\nCalls of pallet <code>ElectionProviderMultiPhase</code>.\nCalls of pallet <code>FellowshipCollective</code>.\nCalls of pallet <code>FellowshipReferenda</code>.\nCalls of pallet <code>Gear</code>.\nCalls of pallet <code>GearDebug</code>.\nCalls of pallet <code>GearEthBridge</code>.\nCalls of pallet <code>GearVoucher</code>.\nCalls of pallet <code>Grandpa</code>.\nCalls of pallet <code>Identity</code>.\nCalls of pallet <code>ImOnline</code>.\nCalls of pallet <code>Multisig</code>.\nCalls of pallet <code>NominationPools</code>.\nCalls of pallet <code>Preimage</code>.\nCalls of pallet <code>Proxy</code>.\nCalls of pallet <code>Referenda</code>.\nCalls of pallet <code>Scheduler</code>.\nCalls of pallet <code>Session</code>.\nCalls of pallet <code>Staking</code>.\nCalls of pallet <code>StakingRewards</code>.\nCalls of pallet <code>Sudo</code>.\nCalls of pallet <code>System</code>.\nCalls of pallet <code>Timestamp</code>.\nCalls of pallet <code>Treasury</code>.\nCalls of pallet <code>Utility</code>.\nCalls of pallet <code>Vesting</code>.\nCalls of pallet <code>Whitelist</code>.\nreturns call name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Event</code> enum of this pallet\nAn account has delegated their vote to another account. …\nThe <code>Event</code> enum of this pallet\nAn [account] has cancelled a previous delegation operation.\nAn election failed.\nThe election has been finalized, with the given …\nThe <code>Event</code> enum of this pallet\nThere was a phase transition in a given round.\nAn account has been rewarded for their signed submission …\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nProgram is active.\nThe payment has already been attempted.\nStash is already bonded.\nAccount ID is already named.\nRewards for this era have already been claimed for this …\nThe account is already delegating.\nAccount is already a member.\nPreimage has already been noted on-chain.\nController is already paired.\nThe account currently has votes attached to it and the …\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nThe class ID supplied is invalid.\nThe referendum index provided is invalid in this context.\nInternal state has become somehow corrupted and the …\nThe referendum status is invalid for this operation.\nA nomination target was supplied that was blocked or …\nThe track identifier given was invalid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nSome bound is not met.\nThe call was already whitelisted; No-Op.\nThe origin filter prevent the call to be dispatched.\nThe call was not whitelisted.\nThe user has enough bond and thus cannot be chilled …\nAttempt to signal GRANDPA change with one already pending.\nThe class must be supplied since it is not easily …\nCode already exists.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nCommission is too low. Must be at least <code>MinCommission</code>.\nThe <code>Error</code> enum of this pallet.\nUnexpected error in state.\nBeneficiary account must pre-exist.\nDuplicate index.\nA given equivocation report is valid but already …\nDuplicated heartbeat.\nRegistered duplicate key.\nThe spend is not yet eligible for payout.\nEmpty index.\nTargets cannot be empty.\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nThe balance of the asset kind is not convertible to the …\nFailed to extract the runtime version from the new runtime.\nFailed to schedule a call\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nFee is changed.\nThere are already a full complement of referenda in …\nAttempting to target a stash that still has funds.\nGas limit too high.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nGear::run() already included in current block.\nError for the staking rewards pallet.\nThe <code>Error</code> enum of this pallet.\nReferendum’s decision deposit is already paid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nProgram is terminated.\nThe payment has neither failed nor succeeded yet.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nBalance too low to send value.\nNot enough balance to execute an action.\nCannot have a validator or nominator role, with value less …\nToo high a balance was provided that the account cannot …\nThe spend origin is valid but the amount it is allowed to …\nProposer’s balance is too low.\nThe weight of the decoded call was higher than the witness.\nAn equivocation proof provided as part of an equivocation …\nInvalid era to reward.\nThe index is invalid.\nNo proposal, bounty or spend at that index.\nInvalid judgement.\nNon existent public key.\nA key ownership proof provided as part of an equivocation …\nInvalid number of nominations.\nNo nominators exist on this page.\nInvalid ownership proof.\nFailed to create a new schedule because some parameter was …\nSlash record index out of bounds.\nThe name of specification does not match between the …\nThe target is invalid.\nThe information provided is incorrect.\nThe provided judgement was for a different identity.\nJudgement given.\nError that occurs when there is an issue paying for …\nAccount liquidity restrictions prevent withdrawal.\nA error in the list interface implementation.\nMaximum number of votes reached.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nCommon error type for runtime modules.\nAttempt to use a non-named function on a named task.\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nThe deposit cannot be refunded since none was made.\nNo identity found.\nNo keys are associated with this account.\nMessage gas tree is not found.\nCan not schedule more unlock chunks.\nThe actor has no permission to conduct the action.\nThe origin is not sufficiently privileged to do the …\nThe deposit refunder is not the depositor.\nThe actor has no permission to conduct the action right …\nNo track exists for the proposal origin.\nCan not rebond without unlocking chunks.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThere are no further records to be removed.\nDelegation to oneself makes no sense.\nThe payout was not yet attempted/claimed.\nThe user is not authorized to perform this action.\nNot a controller account.\nThe account is not currently delegating.\nAccount isn’t found.\nCannot find the scheduled call.\nAccount is not a member.\nAccount isn’t named.\nThe preimage cannot be removed since it has not yet been …\nPoll is not ongoing.\nReferendum is not ongoing.\nSub-account isn’t owned by sender.\nThe given poll index is unknown or has closed.\nThe preimage request cannot be removed since no …\nItems are not sorted and unique.\nNot a stash account.\nSender is not a sub-account.\nThe account given is not vesting.\nThe given account did not vote on the poll.\nThere was nothing to do in the advancement.\nThe given poll is still ongoing.\nAttempt to signal GRANDPA pause when the authority set isn…\nThere was some issue with the mechanism of payment.\nThe <code>Error</code> enum of this pallet.\nThe preimage does not exist.\nProgram already exists.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nProposal has not been approved.\nThe queue of the track is empty.\nThe <code>Error</code> enum of this pallet.\nThe member’s rank is too low to vote.\nThe <code>Error</code> enum of this pallet.\nA preimage may not be removed when there are outstanding …\nSender must be the Sudo account.\nReschedule failed because it does not change scheduled …\nAttempt to signal GRANDPA resume when the authority set isn…\nBlock count doesn’t cover MinimalResumePeriod.\nAn index was out of bounds of the vesting schedules.\nThe <code>Error</code> enum of this pallet.\nError for the session pallet.\nThe specification version is not allowed to decrease …\nThe spend has expired and cannot be claimed.\nThe <code>Error</code> enum of this pallet.\nSticky judgement.\nError for the Sudo pallet.\nError for the System pallet\nGiven target block number is in the past.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nToo many approvals in the queue.\nToo many calls batched.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>MaxHolds</code>.\nThere are too many nominators in the system. Governance …\nMaximum amount of registrars reached. Cannot add any more.\nNumber of named reserves exceed <code>MaxReserves</code>.\nToo many subs-accounts.\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nCannot signal forced change so soon after last.\nError for the treasury pallet.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nAny deposit cannot be refunded until after the decision is …\nThe <code>Error</code> enum of this pallet.\nError for the vesting pallet.\nVesting balance too high to send value.\nThe <code>Error</code> enum of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA member <code>who</code> has been added.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nAny data related to program codes changed.\nThe <code>Event</code> enum of this pallet\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nAny data related to programs changed.\nThe pseudo-inherent extrinsic that runs queue processing …\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nA snapshot of the debug data: programs and message queue (…\nThe <code>Event</code> enum of this pallet\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nPallet Gear Eth Bridge’s event.\nA new message was queued for bridging.\nMerkle root of the queue changed: new messages queued …\nPallet Gear Voucher event.\nVoucher has been declined (set to expired state).\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nThe <code>Event</code> enum of this pallet\nNew authority set has been applied.\nCurrent authority set has been paused.\nCurrent authority set has been resumed.\nThe <code>Event</code> enum of this pallet\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nA judgement was given by a registrar.\nA judgement was asked from a registrar.\nA judgement request was retracted.\nA registrar was added.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nAt the end of the session, no offence was committed.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nAt the end of the session, at least one validator was …\nThe <code>Event</code> enum of this pallet\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nA member has became bonded in a pool.\nA pool has been created.\nA pool has been destroyed.\nEvents of this pallet.\nA member has been removed from a pool.\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nA payout has been made to a member.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nA pool’s maximum commission setting has been changed.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nA preimage has ben cleared.\nThe <code>Event</code> enum of this pallet\nA preimage has been noted.\nA preimage has been requested.\nAn announcement was placed to make a call in the future.\nThe <code>Event</code> enum of this pallet\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\n<code>:code</code> was updated.\nError for the System pallet\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nFailed to extract the runtime version from the new runtime.\nThe name of specification does not match between the …\nAn account was reaped.\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nOn on-chain remark happened.\nThe specification version is not allowed to decrease …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_prefix</code>].\nSee [<code>Pallet::kill_storage</code>].\nSee [<code>Pallet::remark</code>].\nSee [<code>Pallet::remark_with_event</code>].\nSee [<code>Pallet::set_code</code>].\nSee [<code>Pallet::set_code_without_checks</code>].\nSee [<code>Pallet::set_heap_pages</code>].\nSee [<code>Pallet::set_storage</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nSubmitted configuration is invalid.\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::plan_config_change</code>].\nSee [<code>Pallet::report_equivocation</code>].\nSee [<code>Pallet::report_equivocation_unsigned</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA error in the list interface implementation.\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::put_in_front_of</code>].\nSee [<code>Pallet::put_in_front_of_other</code>].\nSee [<code>Pallet::rebag</code>].\nA balance was set by root.\nSome amount was burned from an account.\nContains a variant per dispatchable extrinsic that this …\nBeneficiary account must pre-exist.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nSome balance was frozen.\nBalance too low to send value.\nTotal issuance was increased by <code>amount</code>, creating a credit …\nAccount liquidity restrictions prevent withdrawal.\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>MaxHolds</code>.\nNumber of named reserves exceed <code>MaxReserves</code>.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nVesting balance too high to send value.\nSome amount was withdrawn from the account (e.g. for …\nSee [<code>Pallet::force_set_balance</code>].\nSee [<code>Pallet::force_transfer</code>].\nSee [<code>Pallet::force_unreserve</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::transfer_all</code>].\nSee [<code>Pallet::transfer_allow_death</code>].\nSee [<code>Pallet::transfer_keep_alive</code>].\nSee [<code>Pallet::upgrade_accounts</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nContains a variant per dispatchable extrinsic that this …\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty cannot be closed because it has active child …\nProposer’s balance is too low.\nInvalid bounty fee.\nNo proposal or bounty at that index.\nInvalid bounty value.\nA bounty payout is pending. To cancel the bounty, you must …\nThe bounties cannot be claimed/closed because it’s still …\nThe reason given is just too big.\nRequire bounty curator.\nToo many approvals are already queued.\nThe bounty status is unexpected.\nSee [<code>Pallet::accept_curator</code>].\nSee [<code>Pallet::approve_bounty</code>].\nSee [<code>Pallet::award_bounty</code>].\nSee [<code>Pallet::claim_bounty</code>].\nSee [<code>Pallet::close_bounty</code>].\nSee [<code>Pallet::extend_bounty_expiry</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::propose_bounty</code>].\nSee [<code>Pallet::propose_curator</code>].\nSee [<code>Pallet::unassign_curator</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nContains a variant per dispatchable extrinsic that this …\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty balance is not enough to add new child-bounty.\nThe parent bounty is not in active state.\nNumber of child bounties exceeds limit …\nSee [<code>Pallet::accept_curator</code>].\nSee [<code>Pallet::add_child_bounty</code>].\nSee [<code>Pallet::award_child_bounty</code>].\nSee [<code>Pallet::claim_child_bounty</code>].\nSee [<code>Pallet::close_child_bounty</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::propose_curator</code>].\nSee [<code>Pallet::unassign_curator</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe account is already delegating.\nThe account currently has votes attached to it and the …\nThe class ID supplied is invalid.\nContains a variant per dispatchable extrinsic that this …\nThe class must be supplied since it is not easily …\nAn account has delegated their vote to another account. …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nToo high a balance was provided that the account cannot …\nMaximum number of votes reached.\nThe actor has no permission to conduct the action.\nThe actor has no permission to conduct the action right …\nDelegation to oneself makes no sense.\nThe account is not currently delegating.\nPoll is not ongoing.\nThe given account did not vote on the poll.\nAn [account] has cancelled a previous delegation operation.\nSee [<code>Pallet::delegate</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_other_vote</code>].\nSee [<code>Pallet::remove_vote</code>].\nSee [<code>Pallet::undelegate</code>].\nSee [<code>Pallet::unlock</code>].\nSee [<code>Pallet::vote</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome bound not met\nContains a variant per dispatchable extrinsic that this …\nThe call is not allowed at this point.\nAn election failed.\nThe election has been finalized, with the given …\nError of the pallet that can be returned in response to …\nThe <code>Event</code> enum of this pallet\nThe fallback failed\n<code>Self::insert_submission</code> returned an invalid index.\nSnapshot metadata should exist but didn’t.\nOCW submitted solution for wrong round\nThere was a phase transition in a given round.\nSubmission was too early.\nSubmission was too weak, score-wise.\nWrong number of winners presented.\nAn account has been rewarded for their signed submission …\nThe origin failed to pay the deposit.\nWitness data to dispatchable is invalid.\nThe queue was full, and the solution was not better than …\nThe signed submission consumes too much weight\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nSubmitted solution has too many winners\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::governance_fallback</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::set_emergency_election_result</code>].\nSee [<code>Pallet::set_minimum_untrusted_score</code>].\nSee [<code>Pallet::submit</code>].\nSee [<code>Pallet::submit_unsigned</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProgram is active.\nContains a variant per dispatchable extrinsic that this …\nCode already exists.\nAny data related to program codes changed.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nGas limit too high.\nGear::run() already included in current block.\nProgram is terminated.\nNot enough balance to execute an action.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nMessage gas tree is not found.\nProgram already exists.\nAny data related to programs changed.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nThe pseudo-inherent extrinsic that runs queue processing …\nBlock count doesn’t cover MinimalResumePeriod.\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nSee [<code>Pallet::claim_value</code>].\nSee [<code>Pallet::claim_value_to_inheritor</code>].\nSee [<code>Pallet::create_program</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::run</code>].\nSee [<code>Pallet::send_message</code>].\nSee [<code>Pallet::send_reply</code>].\nSee [<code>Pallet::set_execute_inherent</code>].\nSee [<code>Pallet::upload_code</code>].\nSee [<code>Pallet::upload_program</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nInsufficient user balance.\nInsufficient bank account balance. <strong>Must be unreachable in </strong>…\nDeposit of funds that will not keep bank account alive. …\nInsufficient user’s bank account gas balance.\nInsufficient user’s bank account gas balance.\nOverflow during funds transfer. <strong>Must be unreachable in </strong>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA snapshot of the debug data: programs and message queue (…\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nSee [<code>Pallet::enable_debug_mode</code>].\nSee [<code>Pallet::exhaust_block_resources</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nThe error happens when bridge got called before proper …\nThe error happens when bridge got called when paused.\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nContains a variant per dispatchable extrinsic that this …\nPallet Gear Eth Bridge’s error.\nPallet Gear Eth Bridge’s event.\nThe error happens when bridging thorough builtin and …\nThe error happens when bridging message sent with too big …\nA new message was queued for bridging.\nThe error happens when bridging queue capacity exceeded, …\nMerkle root of the queue changed: new messages queued …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::pause</code>].\nSee [<code>Pallet::send_eth_message</code>].\nSee [<code>Pallet::unpause</code>].\n<code>GasTree::consume</code> called on node, which has some balance …\n<code>GasTree::consume</code> called on node, which has some system …\nThe <code>Error</code> enum of this pallet.\nErrors stating that gas tree has been invalidated\n<code>GasTree::create</code> called with some value amount leading to …\nEither <code>GasTree::consume</code> or <code>GasTree::spent</code> called on a node …\nOutput of <code>Tree::consume</code> procedure that wasn’t expected.\nNode type that can’t occur if algorithm work well\nValue must have been caught or moved upstream, but was …\nValue must have been blocked, but was either moved or …\nValue must have been caught, but was missed or blocked …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nOccurs when given value already exists in mailbox.\nOccurs when mailbox’s element wasn’t found in storage.\nOccurs when given key already exists in queue.\nOccurs when queue’s element wasn’t found in storage.\nOccurs when queue’s head should contain value, but it’…\nOccurs when queue’s head should be empty, but it …\nOccurs when queue’s tail element contains link to the …\nOccurs when while searching queue’s pre-tail, element …\nOccurs when queue’s tail should contain value, but it’…\nOccurs when queue’s tail should be empty, but it …\nOccurs when given value already exists in waitlist.\nOccurs when waitlist’s element wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nOccurs when given task already exists in task pool.\nThe <code>Error</code> enum of this pallet.\nOccurs when task wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBurned from the pool.\nContains a variant per dispatchable extrinsic that this …\nDeposited to the pool.\nError for the staking rewards pallet.\nThe <code>Event</code> enum of this pallet\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nMinted to the pool.\nTransferred from the pool to an external account.\nSee [<code>Pallet::align_supply</code>].\nSee [<code>Pallet::force_refill</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::refill</code>].\nSee [<code>Pallet::withdraw</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe origin is not eligible to execute call.\nError trying transfer balance to/from voucher account.\nContains a variant per dispatchable extrinsic that this …\nVoucher is disabled for code uploading, but requested.\nVoucher update function tries to cut voucher ability of …\nVoucher issue/prolongation duration out of [min; max] …\nThe <code>Error</code> enum of this pallet.\nPallet Gear Voucher event.\nCodeId is not in whitelisted set for voucher.\nDestination program is not in whitelisted set for voucher.\nVoucher with given identifier doesn’t exist for given …\nVoucher still valid and couldn’t be revoked.\nTry to whitelist more CodeId than allowed.\nTry to whitelist more programs than allowed.\nFailed to query destination of the prepaid call.\nVoucher has been declined (set to expired state).\nVoucher has expired and couldn’t be used.\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nSee [<code>Pallet::call</code>].\nSee [<code>Pallet::decline</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::issue</code>].\nSee [<code>Pallet::revoke</code>].\nSee [<code>Pallet::update</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nAttempt to signal GRANDPA change with one already pending.\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nNew authority set has been applied.\nAttempt to signal GRANDPA pause when the authority set isn…\nCurrent authority set has been paused.\nAttempt to signal GRANDPA resume when the authority set isn…\nCurrent authority set has been resumed.\nCannot signal forced change so soon after last.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::note_stalled</code>].\nSee [<code>Pallet::report_equivocation</code>].\nSee [<code>Pallet::report_equivocation_unsigned</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAccount ID is already named.\nIdentity pallet declaration.\nEmpty index.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFee is changed.\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nThe index is invalid.\nInvalid judgement.\nThe target is invalid.\nThe provided judgement was for a different identity.\nJudgement given.\nA judgement was given by a registrar.\nError that occurs when there is an issue paying for …\nA judgement was asked from a registrar.\nA judgement request was retracted.\nNo identity found.\nAccount isn’t found.\nAccount isn’t named.\nSub-account isn’t owned by sender.\nSender is not a sub-account.\nA registrar was added.\nSticky judgement.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nMaximum amount of registrars reached. Cannot add any more.\nToo many subs-accounts.\nSee [<code>Pallet::add_registrar</code>].\nSee [<code>Pallet::add_sub</code>].\nSee [<code>Pallet::cancel_request</code>].\nSee [<code>Pallet::clear_identity</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_identity</code>].\nSee [<code>Pallet::provide_judgement</code>].\nSee [<code>Pallet::quit_sub</code>].\nSee [<code>Pallet::remove_sub</code>].\nSee [<code>Pallet::rename_sub</code>].\nSee [<code>Pallet::request_judgement</code>].\nSee [<code>Pallet::set_account_id</code>].\nSee [<code>Pallet::set_fee</code>].\nSee [<code>Pallet::set_fields</code>].\nSee [<code>Pallet::set_identity</code>].\nSee [<code>Pallet::set_subs</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nContains a variant per dispatchable extrinsic that this …\nDuplicated heartbeat.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nNon existent public key.\nAt the end of the session, at least one validator was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::heartbeat</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall is already approved by this signatory.\nThe data to be stored is already stored.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum weight information provided was too low.\nThreshold must be 2 or greater.\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nCall doesn’t need any (more) approvals.\nNo timepoint was given, yet the multisig operation is …\nMultisig operation not found when attempting to cancel.\nOnly the account that originally created the multisig is …\nThe sender was contained in the other signatories; it …\nThe signatories were provided out of order; they should be …\nThere are too few signatories in the list.\nThere are too many signatories in the list.\nA timepoint was given, yet no multisig operation is …\nA different timepoint was given to the multisig operation …\nSee [<code>Pallet::approve_as_multi</code>].\nSee [<code>Pallet::as_multi</code>].\nSee [<code>Pallet::as_multi_threshold_1</code>].\nSee [<code>Pallet::cancel_as_multi</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn account is already delegating in another pool. An …\nBonding extra is restricted to the exact pending reward …\nA member has became bonded in a pool.\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nA pool has been created.\nSome error occurred that should never happen. This should …\nA pool has been destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nThe member is fully unbonded (and thus cannot access the …\nPool id provided is not correct/usable.\nThe pool’s max commission cannot be set higher than the …\nToo many members in the pool or system.\nThe system is maxed out on pools.\nThe member cannot unbond further chunks due to reaching …\nA member has been removed from a pool.\nMetadata exceeds [<code>Config::MaxMetadataLen</code>]\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nThe amount does not meet the minimum bond to either join …\nNo commission current has been set.\nThere is no pending commission to claim.\nA pool must be in [<code>PoolState::Destroying</code>] in order for the …\nEither a) the caller cannot make a valid kick or b) the …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nNo imbalance in the ED deposit for the pool.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nPartial unbonding now allowed permissionlessly.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nAn account is not a member.\nA (bonded) pool id does not exist.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nA reward pool does not exist. In all cases this is a …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA sub pool does not exist.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nSee [<code>Pallet::adjust_pool_deposit</code>].\nSee [<code>Pallet::bond_extra</code>].\nSee [<code>Pallet::bond_extra_other</code>].\nSee [<code>Pallet::chill</code>].\nSee [<code>Pallet::claim_commission</code>].\nSee [<code>Pallet::claim_payout</code>].\nSee [<code>Pallet::claim_payout_other</code>].\nSee [<code>Pallet::create</code>].\nSee [<code>Pallet::create_with_pool_id</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::join</code>].\nSee [<code>Pallet::nominate</code>].\nSee [<code>Pallet::pool_withdraw_unbonded</code>].\nSee [<code>Pallet::set_claim_permission</code>].\nSee [<code>Pallet::set_commission</code>].\nSee [<code>Pallet::set_commission_change_rate</code>].\nSee [<code>Pallet::set_commission_max</code>].\nSee [<code>Pallet::set_configs</code>].\nSee [<code>Pallet::set_metadata</code>].\nSee [<code>Pallet::set_state</code>].\nSee [<code>Pallet::unbond</code>].\nSee [<code>Pallet::update_roles</code>].\nSee [<code>Pallet::withdraw_unbonded</code>].\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPreimage has already been noted on-chain.\nContains a variant per dispatchable extrinsic that this …\nA preimage has ben cleared.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe user is not authorized to perform this action.\nThe preimage cannot be removed since it has not yet been …\nThe preimage request cannot be removed since no …\nA preimage has been noted.\nA preimage may not be removed when there are outstanding …\nA preimage has been requested.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nSee [<code>Pallet::ensure_updated</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::note_preimage</code>].\nSee [<code>Pallet::request_preimage</code>].\nSee [<code>Pallet::unnote_preimage</code>].\nSee [<code>Pallet::unrequest_preimage</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn announcement was placed to make a call in the future.\nContains a variant per dispatchable extrinsic that this …\nAccount is already a proxy.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCall may not be made by proxy because it may escalate its …\nCannot add self as proxy.\nProxy registration not found.\nSender is not a proxy of the account to be proxied.\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nThere are too many proxies registered or too many …\nAnnouncement, if made at all, was made too recently.\nA call which is incompatible with the proxy type’s …\nSee [<code>Pallet::add_proxy</code>].\nSee [<code>Pallet::announce</code>].\nSee [<code>Pallet::create_pure</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_pure</code>].\nSee [<code>Pallet::proxy</code>].\nSee [<code>Pallet::proxy_announced</code>].\nSee [<code>Pallet::reject_announcement</code>].\nSee [<code>Pallet::remove_announcement</code>].\nSee [<code>Pallet::remove_proxies</code>].\nSee [<code>Pallet::remove_proxy</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccount is already a member.\nContains a variant per dispatchable extrinsic that this …\nUnexpected error in state.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe information provided is incorrect.\nA member <code>who</code> has been added.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe origin is not sufficiently privileged to do the …\nThere are no further records to be removed.\nAccount is not a member.\nThe given poll index is unknown or has closed.\nThe given poll is still ongoing.\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member’s rank is too low to vote.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nSee [<code>Pallet::add_member</code>].\nSee [<code>Pallet::cleanup_poll</code>].\nSee [<code>Pallet::demote_member</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::promote_member</code>].\nSee [<code>Pallet::remove_member</code>].\nSee [<code>Pallet::vote</code>].\nA referendum has been approved and its proposal has been …\nA referendum has been approved and its proposal has been …\nThe referendum index provided is invalid in this context.\nThe referendum status is invalid for this operation.\nThe track identifier given was invalid.\nContains a variant per dispatchable extrinsic that this …\nA referendum has been cancelled.\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nA deposit has been slashed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe <code>Event</code> enum of this pallet\nThere are already a full complement of referenda in …\nReferendum’s decision deposit is already paid.\nA referendum has been killed.\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nMetadata for a referendum has been set.\nThe deposit cannot be refunded since none was made.\nThe deposit refunder is not the depositor.\nNo track exists for the proposal origin.\nReferendum is not ongoing.\nThere was nothing to do in the advancement.\nThe preimage does not exist.\nThe queue of the track is empty.\nA proposal has been rejected by referendum.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nA referendum has been timed out without being decided.\nAny deposit cannot be refunded until after the decision is …\nSee [<code>Pallet::cancel</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill</code>].\nSee [<code>Pallet::nudge_referendum</code>].\nSee [<code>Pallet::one_fewer_deciding</code>].\nSee [<code>Pallet::place_decision_deposit</code>].\nSee [<code>Pallet::refund_decision_deposit</code>].\nSee [<code>Pallet::refund_submission_deposit</code>].\nSee [<code>Pallet::set_metadata</code>].\nSee [<code>Pallet::submit</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nThe <code>Error</code> enum of this pallet.\nEvents type.\nFailed to schedule a call\nAttempt to use a non-named function on a named task.\nCannot find the scheduled call.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nReschedule failed because it does not change scheduled …\nScheduled some task.\nGiven target block number is in the past.\nSee [<code>Pallet::cancel</code>].\nSee [<code>Pallet::cancel_named</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::schedule</code>].\nSee [<code>Pallet::schedule_after</code>].\nSee [<code>Pallet::schedule_named</code>].\nSee [<code>Pallet::schedule_named_after</code>].\nContains a variant per dispatchable extrinsic that this …\nRegistered duplicate key.\nError for the session pallet.\nThe <code>Event</code> enum of this pallet\nInvalid ownership proof.\nNew session has happened. Note that the argument is the …\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nNo keys are associated with this account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::purge_keys</code>].\nSee [<code>Pallet::set_keys</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStash is already bonded.\nRewards for this era have already been claimed for this …\nController is already paired.\nInternal state has become somehow corrupted and the …\nA nomination target was supplied that was blocked or …\nAn account has bonded this amount. [stash, amount]\nSome bound is not met.\nContains a variant per dispatchable extrinsic that this …\nThe user has enough bond and thus cannot be chilled …\nAn account has stopped participating as either a validator …\nCommission is too low. Must be at least <code>MinCommission</code>.\nDuplicate index.\nTargets cannot be empty.\nThe era payout has been set; the first balance is the …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nAttempting to target a stash that still has funds.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nCannot have a validator or nominator role, with value less …\nInvalid era to reward.\nInvalid number of nominations.\nNo nominators exist on this page.\nSlash record index out of bounds.\nA nominator has been kicked from a validator.\nCan not schedule more unlock chunks.\nCan not rebond without unlocking chunks.\nNot a controller account.\nItems are not sorted and unique.\nNot a stash account.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nThere are too many nominators in the system. Governance …\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nAn account has unbonded this amount.\nA validator has set their preferences.\nAn account has called <code>withdraw_unbonded</code> and removed …\nSee [<code>Pallet::bond</code>].\nSee [<code>Pallet::bond_extra</code>].\nSee [<code>Pallet::cancel_deferred_slash</code>].\nSee [<code>Pallet::chill</code>].\nSee [<code>Pallet::chill_other</code>].\nSee [<code>Pallet::force_apply_min_commission</code>].\nSee [<code>Pallet::force_new_era</code>].\nSee [<code>Pallet::force_new_era_always</code>].\nSee [<code>Pallet::force_no_eras</code>].\nSee [<code>Pallet::force_unstake</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::increase_validator_count</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kick</code>].\nSee [<code>Pallet::nominate</code>].\nSee [<code>Pallet::payout_stakers</code>].\nSee [<code>Pallet::payout_stakers_by_page</code>].\nSee [<code>Pallet::reap_stash</code>].\nSee [<code>Pallet::rebond</code>].\nSee [<code>Pallet::scale_validator_count</code>].\nSee [<code>Pallet::set_controller</code>].\nSee [<code>Pallet::set_invulnerables</code>].\nSee [<code>Pallet::set_min_commission</code>].\nSee [<code>Pallet::set_payee</code>].\nSee [<code>Pallet::set_staking_configs</code>].\nSee [<code>Pallet::set_validator_count</code>].\nSee [<code>Pallet::unbond</code>].\nSee [<code>Pallet::validate</code>].\nSee [<code>Pallet::withdraw_unbonded</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nError for the Sudo pallet.\nThe <code>Event</code> enum of this pallet\nThe sudo key has been updated.\nThe key was permanently removed.\nSender must be the Sudo account.\nA sudo call just took place.\nA sudo_as call just took place.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_key</code>].\nSee [<code>Pallet::set_key</code>].\nSee [<code>Pallet::sudo</code>].\nSee [<code>Pallet::sudo_as</code>].\nSee [<code>Pallet::sudo_unchecked_weight</code>].\nContains a variant per dispatchable extrinsic that this …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::set</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe payment has already been attempted.\nA new asset spend proposal has been approved.\nAn approved spend was voided.\nSome funds have been allocated.\nSome of our funds have been burnt.\nContains a variant per dispatchable extrinsic that this …\nSome funds have been deposited.\nThe spend is not yet eligible for payout.\nError for the treasury pallet.\nThe <code>Event</code> enum of this pallet\nThe balance of the asset kind is not convertible to the …\nThe payment has neither failed nor succeeded yet.\nThe spend origin is valid but the amount it is allowed to …\nProposer’s balance is too low.\nNo proposal, bounty or spend at that index.\nThe payout was not yet attempted/claimed.\nA payment happened.\nA payment failed and can be retried.\nThere was some issue with the mechanism of payment.\nProposal has not been approved.\nNew proposal.\nA proposal was rejected; funds were slashed.\nSpending has finished; this is the amount that rolls over …\nA new spend proposal has been approved.\nThe spend has expired and cannot be claimed.\nA spend was processed and removed from the storage. It …\nWe have ended a spend period and will now allocate funds.\nToo many approvals in the queue.\nThe inactive funds of the pallet have been updated.\nSee [<code>Pallet::approve_proposal</code>].\nSee [<code>Pallet::check_status</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::payout</code>].\nSee [<code>Pallet::propose_spend</code>].\nSee [<code>Pallet::reject_proposal</code>].\nSee [<code>Pallet::remove_approval</code>].\nSee [<code>Pallet::spend</code>].\nSee [<code>Pallet::spend_local</code>].\nSee [<code>Pallet::void_spend</code>].\nBatch of dispatches completed fully with no error.\nBatch of dispatches completed but has errors.\nBatch of dispatches did not complete fully. Index of first …\nContains a variant per dispatchable extrinsic that this …\nA call was dispatched.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA single item within a Batch of dispatches has completed …\nA single item within a Batch of dispatches has completed …\nToo many calls batched.\nSee [<code>Pallet::as_derivative</code>].\nSee [<code>Pallet::batch</code>].\nSee [<code>Pallet::batch_all</code>].\nSee [<code>Pallet::dispatch_as</code>].\nSee [<code>Pallet::force_batch</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::with_weight</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nContains a variant per dispatchable extrinsic that this …\nError for the vesting pallet.\nThe <code>Event</code> enum of this pallet\nFailed to create a new schedule because some parameter was …\nThe account given is not vesting.\nAn index was out of bounds of the vesting schedules.\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nSee [<code>Pallet::force_remove_vesting_schedule</code>].\nSee [<code>Pallet::force_vested_transfer</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::merge_schedules</code>].\nSee [<code>Pallet::vest</code>].\nSee [<code>Pallet::vest_other</code>].\nSee [<code>Pallet::vested_transfer</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call was already whitelisted; No-Op.\nThe call was not whitelisted.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe weight of the decoded call was higher than the witness.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nSee [<code>Pallet::dispatch_whitelisted_call</code>].\nSee [<code>Pallet::dispatch_whitelisted_call_with_preimage</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_whitelisted_call</code>].\nSee [<code>Pallet::whitelist_call</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nEvents type.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nScheduled some task.\nThe <code>Event</code> enum of this pallet\nNew session has happened. Note that the argument is the …\nAn account has bonded this amount. [stash, amount]\nAn account has stopped participating as either a validator …\nThe era payout has been set; the first balance is the …\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nA nominator has been kicked from a validator.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nAn account has unbonded this amount.\nA validator has set their preferences.\nAn account has called <code>withdraw_unbonded</code> and removed …\nBurned from the pool.\nDeposited to the pool.\nThe <code>Event</code> enum of this pallet\nMinted to the pool.\nTransferred from the pool to an external account.\nStorage of pallet <code>AuthorityDiscovery</code>.\nStorage of pallet <code>Authorship</code>.\nStorage of pallet <code>Babe</code>.\nStorage of pallet <code>BagsList</code>.\nStorage of pallet <code>Balances</code>.\nStorage of pallet <code>Bounties</code>.\nStorage of pallet <code>ChildBounties</code>.\nStorage of pallet <code>ConvictionVoting</code>.\nStorage of pallet <code>ElectionProviderMultiPhase</code>.\nStorage of pallet <code>FellowshipCollective</code>.\nStorage of pallet <code>FellowshipReferenda</code>.\nStorage of pallet <code>GearBank</code>.\nStorage of pallet <code>GearDebug</code>.\nStorage of pallet <code>GearEthBridge</code>.\nStorage of pallet <code>GearGas</code>.\nStorage of pallet <code>GearMessenger</code>.\nStorage of pallet <code>GearProgram</code>.\nStorage of pallet <code>GearScheduler</code>.\nStorage of pallet <code>Gear</code>.\nStorage of pallet <code>GearVoucher</code>.\nStorage of pallet <code>Grandpa</code>.\nStorage of pallet <code>Historical</code>.\nStorage of pallet <code>Identity</code>.\nStorage of pallet <code>ImOnline</code>.\nStorage of pallet <code>Multisig</code>.\nStorage of pallet <code>NominationPools</code>.\nStorage of pallet <code>Offences</code>.\nStorage of pallet <code>Preimage</code>.\nStorage of pallet <code>Proxy</code>.\nStorage of pallet <code>Referenda</code>.\nStorage of pallet <code>Scheduler</code>.\nStorage of pallet <code>Session</code>.\nStorage of pallet <code>StakingRewards</code>.\nStorage of pallet <code>Staking</code>.\nShow the call info.\nStorage of pallet <code>Sudo</code>.\nStorage of pallet <code>System</code>.\nStorage of pallet <code>Timestamp</code>.\nStorage of pallet <code>TransactionPayment</code>.\nStorage of pallet <code>Treasury</code>.\nStorage of pallet <code>Vesting</code>.\nStorage of pallet <code>Whitelist</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.")