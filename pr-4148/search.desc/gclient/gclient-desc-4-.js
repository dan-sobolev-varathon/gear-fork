searchState.loadedDescShard("gclient", 4, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nThe error happens when bridge got called before proper …\nThe error happens when bridge got called when paused.\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nContains a variant per dispatchable extrinsic that this …\nPallet Gear Eth Bridge’s error.\nPallet Gear Eth Bridge’s event.\nThe error happens when bridging thorough builtin and …\nThe error happens when bridging message sent with too big …\nA new message was queued for bridging.\nThe error happens when bridging queue capacity exceeded, …\nMerkle root of the queue changed: new messages queued …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::pause</code>].\nSee [<code>Pallet::send_eth_message</code>].\nSee [<code>Pallet::unpause</code>].\n<code>GasTree::consume</code> called on node, which has some balance …\n<code>GasTree::consume</code> called on node, which has some system …\nThe <code>Error</code> enum of this pallet.\nErrors stating that gas tree has been invalidated\n<code>GasTree::create</code> called with some value amount leading to …\nEither <code>GasTree::consume</code> or <code>GasTree::spent</code> called on a node …\nOutput of <code>Tree::consume</code> procedure that wasn’t expected.\nNode type that can’t occur if algorithm work well\nValue must have been caught or moved upstream, but was …\nValue must have been blocked, but was either moved or …\nValue must have been caught, but was missed or blocked …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nOccurs when given value already exists in mailbox.\nOccurs when mailbox’s element wasn’t found in storage.\nOccurs when given key already exists in queue.\nOccurs when queue’s element wasn’t found in storage.\nOccurs when queue’s head should contain value, but it’…\nOccurs when queue’s head should be empty, but it …\nOccurs when queue’s tail element contains link to the …\nOccurs when while searching queue’s pre-tail, element …\nOccurs when queue’s tail should contain value, but it’…\nOccurs when queue’s tail should be empty, but it …\nOccurs when given value already exists in waitlist.\nOccurs when waitlist’s element wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nOccurs when given task already exists in task pool.\nThe <code>Error</code> enum of this pallet.\nOccurs when task wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBurned from the pool.\nContains a variant per dispatchable extrinsic that this …\nDeposited to the pool.\nError for the staking rewards pallet.\nThe <code>Event</code> enum of this pallet\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nMinted to the pool.\nTransferred from the pool to an external account.\nSee [<code>Pallet::align_supply</code>].\nSee [<code>Pallet::force_refill</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::refill</code>].\nSee [<code>Pallet::withdraw</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe origin is not eligible to execute call.\nError trying transfer balance to/from voucher account.\nContains a variant per dispatchable extrinsic that this …\nVoucher is disabled for code uploading, but requested.\nVoucher update function tries to cut voucher ability of …\nVoucher issue/prolongation duration out of [min; max] …\nThe <code>Error</code> enum of this pallet.\nPallet Gear Voucher event.\nDestination program is not in whitelisted set for voucher.\nVoucher with given identifier doesn’t exist for given …\nVoucher still valid and couldn’t be revoked.\nTry to whitelist more programs than allowed.\nFailed to query destination of the prepaid call.\nVoucher has been declined (set to expired state).\nVoucher has expired and couldn’t be used.\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nSee [<code>Pallet::call</code>].\nSee [<code>Pallet::call_deprecated</code>].\nSee [<code>Pallet::decline</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::issue</code>].\nSee [<code>Pallet::revoke</code>].\nSee [<code>Pallet::update</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nAttempt to signal GRANDPA change with one already pending.\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nNew authority set has been applied.\nAttempt to signal GRANDPA pause when the authority set isn…\nCurrent authority set has been paused.\nAttempt to signal GRANDPA resume when the authority set isn…\nCurrent authority set has been resumed.\nCannot signal forced change so soon after last.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::note_stalled</code>].\nSee [<code>Pallet::report_equivocation</code>].\nSee [<code>Pallet::report_equivocation_unsigned</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAccount ID is already named.\nIdentity pallet declaration.\nEmpty index.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFee is changed.\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nThe index is invalid.\nInvalid judgement.\nThe target is invalid.\nThe provided judgement was for a different identity.\nJudgement given.\nA judgement was given by a registrar.\nError that occurs when there is an issue paying for …\nA judgement was asked from a registrar.\nA judgement request was retracted.\nNo identity found.\nAccount isn’t found.\nAccount isn’t named.\nSub-account isn’t owned by sender.\nSender is not a sub-account.\nA registrar was added.\nSticky judgement.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nMaximum amount of registrars reached. Cannot add any more.\nToo many subs-accounts.\nSee [<code>Pallet::add_registrar</code>].\nSee [<code>Pallet::add_sub</code>].\nSee [<code>Pallet::cancel_request</code>].\nSee [<code>Pallet::clear_identity</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_identity</code>].\nSee [<code>Pallet::provide_judgement</code>].\nSee [<code>Pallet::quit_sub</code>].\nSee [<code>Pallet::remove_sub</code>].\nSee [<code>Pallet::rename_sub</code>].\nSee [<code>Pallet::request_judgement</code>].\nSee [<code>Pallet::set_account_id</code>].\nSee [<code>Pallet::set_fee</code>].\nSee [<code>Pallet::set_fields</code>].\nSee [<code>Pallet::set_identity</code>].\nSee [<code>Pallet::set_subs</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nContains a variant per dispatchable extrinsic that this …\nDuplicated heartbeat.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nNon existent public key.\nAt the end of the session, at least one validator was …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::heartbeat</code>].\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall is already approved by this signatory.\nThe data to be stored is already stored.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum weight information provided was too low.\nThreshold must be 2 or greater.\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nCall doesn’t need any (more) approvals.\nNo timepoint was given, yet the multisig operation is …\nMultisig operation not found when attempting to cancel.\nOnly the account that originally created the multisig is …\nThe sender was contained in the other signatories; it …\nThe signatories were provided out of order; they should be …\nThere are too few signatories in the list.\nThere are too many signatories in the list.\nA timepoint was given, yet no multisig operation is …\nA different timepoint was given to the multisig operation …\nSee [<code>Pallet::approve_as_multi</code>].\nSee [<code>Pallet::as_multi</code>].\nSee [<code>Pallet::as_multi_threshold_1</code>].\nSee [<code>Pallet::cancel_as_multi</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn account is already delegating in another pool. An …\nBonding extra is restricted to the exact pending reward …\nA member has became bonded in a pool.\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nA pool has been created.\nSome error occurred that should never happen. This should …\nA pool has been destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nThe member is fully unbonded (and thus cannot access the …\nPool id provided is not correct/usable.\nThe pool’s max commission cannot be set higher than the …\nToo many members in the pool or system.\nThe system is maxed out on pools.\nThe member cannot unbond further chunks due to reaching …\nA member has been removed from a pool.\nMetadata exceeds [<code>Config::MaxMetadataLen</code>]\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nThe amount does not meet the minimum bond to either join …\nNo commission current has been set.\nThere is no pending commission to claim.\nA pool must be in [<code>PoolState::Destroying</code>] in order for the …\nEither a) the caller cannot make a valid kick or b) the …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nNo imbalance in the ED deposit for the pool.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nPartial unbonding now allowed permissionlessly.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nAn account is not a member.\nA (bonded) pool id does not exist.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nA reward pool does not exist. In all cases this is a …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA sub pool does not exist.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nSee [<code>Pallet::adjust_pool_deposit</code>].\nSee [<code>Pallet::bond_extra</code>].\nSee [<code>Pallet::bond_extra_other</code>].\nSee [<code>Pallet::chill</code>].\nSee [<code>Pallet::claim_commission</code>].\nSee [<code>Pallet::claim_payout</code>].\nSee [<code>Pallet::claim_payout_other</code>].\nSee [<code>Pallet::create</code>].\nSee [<code>Pallet::create_with_pool_id</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::join</code>].\nSee [<code>Pallet::nominate</code>].\nSee [<code>Pallet::pool_withdraw_unbonded</code>].\nSee [<code>Pallet::set_claim_permission</code>].\nSee [<code>Pallet::set_commission</code>].\nSee [<code>Pallet::set_commission_change_rate</code>].\nSee [<code>Pallet::set_commission_max</code>].\nSee [<code>Pallet::set_configs</code>].\nSee [<code>Pallet::set_metadata</code>].\nSee [<code>Pallet::set_state</code>].\nSee [<code>Pallet::unbond</code>].\nSee [<code>Pallet::update_roles</code>].\nSee [<code>Pallet::withdraw_unbonded</code>].\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPreimage has already been noted on-chain.\nContains a variant per dispatchable extrinsic that this …\nA preimage has ben cleared.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe user is not authorized to perform this action.\nThe preimage cannot be removed since it has not yet been …\nThe preimage request cannot be removed since no …\nA preimage has been noted.\nA preimage may not be removed when there are outstanding …\nA preimage has been requested.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nSee [<code>Pallet::ensure_updated</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::note_preimage</code>].\nSee [<code>Pallet::request_preimage</code>].\nSee [<code>Pallet::unnote_preimage</code>].\nSee [<code>Pallet::unrequest_preimage</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn announcement was placed to make a call in the future.\nContains a variant per dispatchable extrinsic that this …\nAccount is already a proxy.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCall may not be made by proxy because it may escalate its …\nCannot add self as proxy.\nProxy registration not found.\nSender is not a proxy of the account to be proxied.\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nThere are too many proxies registered or too many …\nAnnouncement, if made at all, was made too recently.\nA call which is incompatible with the proxy type’s …\nSee [<code>Pallet::add_proxy</code>].\nSee [<code>Pallet::announce</code>].\nSee [<code>Pallet::create_pure</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill_pure</code>].\nSee [<code>Pallet::proxy</code>].\nSee [<code>Pallet::proxy_announced</code>].\nSee [<code>Pallet::reject_announcement</code>].\nSee [<code>Pallet::remove_announcement</code>].\nSee [<code>Pallet::remove_proxies</code>].\nSee [<code>Pallet::remove_proxy</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccount is already a member.\nContains a variant per dispatchable extrinsic that this …\nUnexpected error in state.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe information provided is incorrect.\nA member <code>who</code> has been added.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe origin is not sufficiently privileged to do the …\nThere are no further records to be removed.\nAccount is not a member.\nThe given poll index is unknown or has closed.\nThe given poll is still ongoing.\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member’s rank is too low to vote.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nSee [<code>Pallet::add_member</code>].\nSee [<code>Pallet::cleanup_poll</code>].\nSee [<code>Pallet::demote_member</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::promote_member</code>].\nSee [<code>Pallet::remove_member</code>].\nSee [<code>Pallet::vote</code>].\nA referendum has been approved and its proposal has been …\nA referendum has been approved and its proposal has been …\nThe referendum index provided is invalid in this context.\nThe referendum status is invalid for this operation.\nThe track identifier given was invalid.\nContains a variant per dispatchable extrinsic that this …\nA referendum has been cancelled.\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nA deposit has been slashed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe <code>Event</code> enum of this pallet\nThere are already a full complement of referenda in …\nReferendum’s decision deposit is already paid.\nA referendum has been killed.\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nMetadata for a referendum has been set.\nThe deposit cannot be refunded since none was made.\nThe deposit refunder is not the depositor.\nNo track exists for the proposal origin.\nReferendum is not ongoing.\nThere was nothing to do in the advancement.\nThe preimage does not exist.\nThe queue of the track is empty.\nA proposal has been rejected by referendum.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nA referendum has been timed out without being decided.\nAny deposit cannot be refunded until after the decision is …\nSee [<code>Pallet::cancel</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kill</code>].\nSee [<code>Pallet::nudge_referendum</code>].\nSee [<code>Pallet::one_fewer_deciding</code>].\nSee [<code>Pallet::place_decision_deposit</code>].\nSee [<code>Pallet::refund_decision_deposit</code>].\nSee [<code>Pallet::refund_submission_deposit</code>].\nSee [<code>Pallet::set_metadata</code>].\nSee [<code>Pallet::submit</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nThe <code>Error</code> enum of this pallet.\nEvents type.\nFailed to schedule a call\nAttempt to use a non-named function on a named task.\nCannot find the scheduled call.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nReschedule failed because it does not change scheduled …\nScheduled some task.\nGiven target block number is in the past.\nSee [<code>Pallet::cancel</code>].\nSee [<code>Pallet::cancel_named</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::schedule</code>].\nSee [<code>Pallet::schedule_after</code>].\nSee [<code>Pallet::schedule_named</code>].\nSee [<code>Pallet::schedule_named_after</code>].\nContains a variant per dispatchable extrinsic that this …\nRegistered duplicate key.\nError for the session pallet.\nThe <code>Event</code> enum of this pallet\nInvalid ownership proof.\nNew session has happened. Note that the argument is the …\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nNo keys are associated with this account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::purge_keys</code>].\nSee [<code>Pallet::set_keys</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStash is already bonded.\nRewards for this era have already been claimed for this …\nController is already paired.\nInternal state has become somehow corrupted and the …\nA nomination target was supplied that was blocked or …\nAn account has bonded this amount. [stash, amount]\nSome bound is not met.\nContains a variant per dispatchable extrinsic that this …\nThe user has enough bond and thus cannot be chilled …\nAn account has stopped participating as either a validator …\nCommission is too low. Must be at least <code>MinCommission</code>.\nDuplicate index.\nTargets cannot be empty.\nThe era payout has been set; the first balance is the …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nAttempting to target a stash that still has funds.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nCannot have a validator or nominator role, with value less …\nInvalid era to reward.\nInvalid number of nominations.\nNo nominators exist on this page.\nSlash record index out of bounds.\nA nominator has been kicked from a validator.\nCan not schedule more unlock chunks.\nCan not rebond without unlocking chunks.\nNot a controller account.\nItems are not sorted and unique.\nNot a stash account.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nThere are too many nominators in the system. Governance …\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nAn account has unbonded this amount.\nA validator has set their preferences.\nAn account has called <code>withdraw_unbonded</code> and removed …\nSee [<code>Pallet::bond</code>].\nSee [<code>Pallet::bond_extra</code>].\nSee [<code>Pallet::cancel_deferred_slash</code>].\nSee [<code>Pallet::chill</code>].\nSee [<code>Pallet::chill_other</code>].\nSee [<code>Pallet::force_apply_min_commission</code>].\nSee [<code>Pallet::force_new_era</code>].\nSee [<code>Pallet::force_new_era_always</code>].\nSee [<code>Pallet::force_no_eras</code>].\nSee [<code>Pallet::force_unstake</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSee [<code>Pallet::increase_validator_count</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::kick</code>].\nSee [<code>Pallet::nominate</code>].\nSee [<code>Pallet::payout_stakers</code>].\nSee [<code>Pallet::payout_stakers_by_page</code>].\nSee [<code>Pallet::reap_stash</code>].\nSee [<code>Pallet::rebond</code>].\nSee [<code>Pallet::scale_validator_count</code>].\nSee [<code>Pallet::set_controller</code>].\nSee [<code>Pallet::set_invulnerables</code>].\nSee [<code>Pallet::set_min_commission</code>].\nSee [<code>Pallet::set_payee</code>].\nSee [<code>Pallet::set_staking_configs</code>].\nSee [<code>Pallet::set_validator_count</code>].\nSee [<code>Pallet::unbond</code>].\nSee [<code>Pallet::validate</code>].\nSee [<code>Pallet::withdraw_unbonded</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nError for the Sudo pallet.\nThe <code>Event</code> enum of this pallet\nThe sudo key has been updated.\nThe key was permanently removed.\nSender must be the Sudo account.\nA sudo call just took place.\nA sudo_as call just took place.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_key</code>].\nSee [<code>Pallet::set_key</code>].\nSee [<code>Pallet::sudo</code>].\nSee [<code>Pallet::sudo_as</code>].\nSee [<code>Pallet::sudo_unchecked_weight</code>].\nContains a variant per dispatchable extrinsic that this …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::set</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe payment has already been attempted.\nA new asset spend proposal has been approved.\nAn approved spend was voided.\nSome funds have been allocated.\nSome of our funds have been burnt.\nContains a variant per dispatchable extrinsic that this …\nSome funds have been deposited.\nThe spend is not yet eligible for payout.\nError for the treasury pallet.\nThe <code>Event</code> enum of this pallet\nThe balance of the asset kind is not convertible to the …\nThe payment has neither failed nor succeeded yet.\nThe spend origin is valid but the amount it is allowed to …\nProposer’s balance is too low.\nNo proposal, bounty or spend at that index.\nThe payout was not yet attempted/claimed.\nA payment happened.\nA payment failed and can be retried.\nThere was some issue with the mechanism of payment.\nProposal has not been approved.\nNew proposal.\nA proposal was rejected; funds were slashed.\nSpending has finished; this is the amount that rolls over …\nA new spend proposal has been approved.\nThe spend has expired and cannot be claimed.\nA spend was processed and removed from the storage. It …\nWe have ended a spend period and will now allocate funds.\nToo many approvals in the queue.\nThe inactive funds of the pallet have been updated.\nSee [<code>Pallet::approve_proposal</code>].\nSee [<code>Pallet::check_status</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::payout</code>].\nSee [<code>Pallet::propose_spend</code>].\nSee [<code>Pallet::reject_proposal</code>].\nSee [<code>Pallet::remove_approval</code>].\nSee [<code>Pallet::spend</code>].\nSee [<code>Pallet::spend_local</code>].\nSee [<code>Pallet::void_spend</code>].\nBatch of dispatches completed fully with no error.\nBatch of dispatches completed but has errors.\nBatch of dispatches did not complete fully. Index of first …\nContains a variant per dispatchable extrinsic that this …\nA call was dispatched.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA single item within a Batch of dispatches has completed …\nA single item within a Batch of dispatches has completed …\nToo many calls batched.\nSee [<code>Pallet::as_derivative</code>].\nSee [<code>Pallet::batch</code>].\nSee [<code>Pallet::batch_all</code>].\nSee [<code>Pallet::dispatch_as</code>].\nSee [<code>Pallet::force_batch</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::with_weight</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nContains a variant per dispatchable extrinsic that this …\nError for the vesting pallet.\nThe <code>Event</code> enum of this pallet\nFailed to create a new schedule because some parameter was …\nThe account given is not vesting.\nAn index was out of bounds of the vesting schedules.\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nSee [<code>Pallet::force_remove_vesting_schedule</code>].\nSee [<code>Pallet::force_vested_transfer</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::merge_schedules</code>].\nSee [<code>Pallet::vest</code>].\nSee [<code>Pallet::vest_other</code>].\nSee [<code>Pallet::vested_transfer</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call was already whitelisted; No-Op.\nThe call was not whitelisted.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe weight of the decoded call was higher than the witness.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nSee [<code>Pallet::dispatch_whitelisted_call</code>].\nSee [<code>Pallet::dispatch_whitelisted_call_with_preimage</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSee [<code>Pallet::remove_whitelisted_call</code>].\nSee [<code>Pallet::whitelist_call</code>].\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nEvents type.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nScheduled some task.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nNew session has happened. Note that the argument is the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn account has bonded this amount. [stash, amount]\nAn account has stopped participating as either a validator …\nThe era payout has been set; the first balance is the …\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nA nominator has been kicked from a validator.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nAn account has unbonded this amount.\nA validator has set their preferences.\nAn account has called <code>withdraw_unbonded</code> and removed …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBurned from the pool.\nDeposited to the pool.\nThe <code>Event</code> enum of this pallet\nMinted to the pool.\nTransferred from the pool to an external account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage of pallet <code>AuthorityDiscovery</code>.\nStorage of pallet <code>Authorship</code>.\nStorage of pallet <code>Babe</code>.\nStorage of pallet <code>BagsList</code>.\nStorage of pallet <code>Balances</code>.\nStorage of pallet <code>Bounties</code>.\nStorage of pallet <code>ChildBounties</code>.\nStorage of pallet <code>ConvictionVoting</code>.\nStorage of pallet <code>ElectionProviderMultiPhase</code>.\nStorage of pallet <code>FellowshipCollective</code>.\nStorage of pallet <code>FellowshipReferenda</code>.\nStorage of pallet <code>GearBank</code>.\nStorage of pallet <code>GearDebug</code>.\nStorage of pallet <code>GearEthBridge</code>.\nStorage of pallet <code>GearGas</code>.\nStorage of pallet <code>GearMessenger</code>.\nStorage of pallet <code>GearProgram</code>.\nStorage of pallet <code>GearScheduler</code>.\nStorage of pallet <code>Gear</code>.\nStorage of pallet <code>GearVoucher</code>.\nStorage of pallet <code>Grandpa</code>.\nStorage of pallet <code>Historical</code>.\nStorage of pallet <code>Identity</code>.\nStorage of pallet <code>ImOnline</code>.\nStorage of pallet <code>Multisig</code>.\nStorage of pallet <code>NominationPools</code>.\nStorage of pallet <code>Offences</code>.\nStorage of pallet <code>Preimage</code>.\nStorage of pallet <code>Proxy</code>.\nStorage of pallet <code>Referenda</code>.\nStorage of pallet <code>Scheduler</code>.\nStorage of pallet <code>Session</code>.\nStorage of pallet <code>StakingRewards</code>.\nStorage of pallet <code>Staking</code>.\nShow the call info.\nStorage of pallet <code>Sudo</code>.\nStorage of pallet <code>System</code>.\nStorage of pallet <code>Timestamp</code>.\nStorage of pallet <code>TransactionPayment</code>.\nStorage of pallet <code>Treasury</code>.\nStorage of pallet <code>Vesting</code>.\nStorage of pallet <code>Whitelist</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns call name.\nThe <code>Event</code> enum of this pallet\nThe sudo key has been updated.\nThe key was permanently removed.\nA sudo call just took place.\nA sudo_as call just took place.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>:code</code> was updated.\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nAn account was reaped.\nA new account was created.\nOn on-chain remark happened.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA new asset spend proposal has been approved.\nAn approved spend was voided.\nSome funds have been allocated.\nSome of our funds have been burnt.\nSome funds have been deposited.\nThe <code>Event</code> enum of this pallet\nA payment happened.\nA payment failed and can be retried.\nNew proposal.\nA proposal was rejected; funds were slashed.\nSpending has finished; this is the amount that rolls over …\nA new spend proposal has been approved.\nA spend was processed and removed from the storage. It …\nWe have ended a spend period and will now allocate funds.\nThe inactive funds of the pallet have been updated.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBatch of dispatches completed fully with no error.\nBatch of dispatches completed but has errors.\nBatch of dispatches did not complete fully. Index of first …\nA call was dispatched.\nThe <code>Event</code> enum of this pallet\nA single item within a Batch of dispatches has completed …\nA single item within a Batch of dispatches has completed …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")